/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20160422-64(RM)
 * Copyright (c) 2000 - 2016 Intel Corporation
 * 
 * Disassembling to non-symbolic legacy ASL operators
 *
 * Disassembly of SSDT-0.aml, Tue Jul 19 12:29:37 2016
 *
 * Original Table Header:
 *     Signature        "SSDT"
 *     Length           0x00003548 (13640)
 *     Revision         0x01
 *     Checksum         0x52
 *     OEM ID           "ACRSYS"
 *     OEM Table ID     "ACRPRDCT"
 *     OEM Revision     0x00001000 (4096)
 *     Compiler ID      "1025"
 *     Compiler Version 0x00040000 (262144)
 */
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    /*
     * External declarations were imported from
     * a reference file -- refs.txt
     */

    External (_GPE.MMTB, MethodObj)    // Imported: 0 Arguments
    External (_GPE.VHOV, MethodObj)    // Imported: 3 Arguments
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.GFX0.DD02._BCM, MethodObj)    // Imported: 1 Arguments
    External (_SB_.PCI0.LPCB.EC0_, DeviceObj)
    External (_SB_.PCI0.LPCB.EC0_.KBBL, FieldUnitObj)
    External (_SB_.PCI0.LPCB.EC0_.ROMD, FieldUnitObj)
    External (_SB_.PCI0.LPCB.EC0_.TOHP, FieldUnitObj)
    External (_SB_.PCI0.LPCB.H_EC.ECRD, MethodObj)    // Imported: 1 Arguments
    External (_SB_.PCI0.LPCB.H_EC.ECWT, MethodObj)    // Imported: 2 Arguments
    External (_SB_.PCI0.PEG0.PEGP.SGPO, MethodObj)    // Imported: 2 Arguments
    External (_SB_.PCI0.SAT0.SDSM, MethodObj)    // Imported: 4 Arguments
    External (_SB_.PCI0.SAT1.SDSM, MethodObj)    // Imported: 4 Arguments
    External (MDBG, MethodObj)    // Imported: 1 Arguments

    Scope (\_SB.PCI0)
    {
        Device (WMID)
        {
            Name (_HID, "PNP0C14")  // _HID: Hardware ID
            Name (_UID, "APGe")  // _UID: Unique ID
            OperationRegion (AGNS, SystemMemory, 0x9CFBB000, 0x00000975)
            Field (AGNS, AnyAcc, Lock, Preserve)
            {
                D2DF,   8, 
                MTID,   8, 
                WMIB,   16528, 
                ECDA,   2048, 
                HDIF,   504, 
                ODIF,   168, 
                CTID,   16, 
                LMST,   8, 
                EPMS,   8, 
                DCST,   8, 
                APUS,   8, 
                RFDS,   8, 
                ODST,   8, 
                HSST,   8, 
                TMGB,   16, 
                TOPT,   8, 
                PSSP,   8
            }

            Name (_WDG, Buffer (0xC8)
            {
                /* 0000 */  0x5E, 0xA1, 0x6A, 0x67, 0x47, 0x6A, 0x9F, 0x4D,
                /* 0008 */  0xA2, 0xCC, 0x1E, 0x6D, 0x18, 0xD1, 0x40, 0x26,
                /* 0010 */  0xBC, 0x00, 0x01, 0x08, 0xEA, 0x69, 0xEF, 0x61,
                /* 0018 */  0x5C, 0x86, 0xC3, 0x4B, 0xA5, 0x02, 0xA0, 0xDE,
                /* 0020 */  0xBA, 0x0C, 0xB5, 0x31, 0x41, 0x41, 0x01, 0x02,
                /* 0028 */  0xC5, 0x2E, 0x77, 0x79, 0xB1, 0x04, 0xFD, 0x4B,
                /* 0030 */  0x84, 0x3C, 0x61, 0xE7, 0xF7, 0x7B, 0x6C, 0xC9,
                /* 0038 */  0x42, 0x45, 0x01, 0x02, 0xC6, 0x2E, 0x77, 0x79,
                /* 0040 */  0xB1, 0x04, 0xFD, 0x4B, 0x84, 0x3C, 0x61, 0xE7,
                /* 0048 */  0xF7, 0x7B, 0x6C, 0xC9, 0x42, 0x46, 0x01, 0x02,
                /* 0050 */  0x66, 0x56, 0x5F, 0xF7, 0xB3, 0xB8, 0x5D, 0x4A,
                /* 0058 */  0xA9, 0x1C, 0x74, 0x88, 0xF6, 0x2E, 0x56, 0x37,
                /* 0060 */  0x42, 0x4B, 0x01, 0x02, 0xDA, 0xBB, 0x1D, 0xFE,
                /* 0068 */  0x14, 0x30, 0x56, 0x48, 0x87, 0x0C, 0x5B, 0x3A,
                /* 0070 */  0x74, 0x4B, 0xF3, 0x41, 0x42, 0x4C, 0x01, 0x02,
                /* 0078 */  0xA7, 0xC3, 0xB0, 0x77, 0x1D, 0xF7, 0xCB, 0x43,
                /* 0080 */  0xB7, 0x49, 0x91, 0xCB, 0xFF, 0x5D, 0xDC, 0x43,
                /* 0088 */  0x42, 0x47, 0x01, 0x02, 0xF6, 0x7E, 0xD7, 0xA9,
                /* 0090 */  0xE0, 0x55, 0x06, 0x47, 0xB1, 0x39, 0x96, 0xAC,
                /* 0098 */  0xE1, 0x3F, 0x22, 0x69, 0xBD, 0x00, 0x01, 0x08,
                /* 00A0 */  0x0E, 0x13, 0x98, 0x9F, 0x48, 0x3B, 0xB3, 0x40,
                /* 00A8 */  0x94, 0x02, 0xDE, 0x8E, 0x16, 0x0F, 0x30, 0xCC,
                /* 00B0 */  0x41, 0x42, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,
                /* 00B8 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,
                /* 00C0 */  0xC9, 0x06, 0x29, 0x10, 0x41, 0x42, 0x01, 0x00 
            })
            Name (BFFB, Buffer (0x02)
            {
                 0x00, 0x00                                     
            })
            Name (FEBC, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (AAST, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (AAGT, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BEBI, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BKCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BKGB, Buffer (0x14)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00                         
            })
            Name (BKSU, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BKSS, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BKSB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BLCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BLSP, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BLLB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BLSD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BLGD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BLDR, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                         
            })
            Name (BLGP, Buffer (0x20)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BGS3, Buffer (0x02)
            {
                 0x00, 0x00                                     
            })
            Name (BKMN, Buffer (0x58)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BKSN, Buffer (0x30)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BKAT, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BKGU, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BKGS, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (BLGB, Buffer (0x080A)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0520 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0528 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0530 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0538 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0540 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0548 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0550 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0558 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0560 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0568 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0570 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0578 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0580 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0588 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0590 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0598 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 05F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0600 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0608 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0610 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0618 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0620 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0628 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0630 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0638 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0640 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0648 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0650 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0658 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0660 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0668 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0670 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0678 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0680 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0688 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0690 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0698 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 06F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0700 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0708 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0710 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0718 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0720 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0728 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0730 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0738 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0740 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0748 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0750 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0758 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0760 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0768 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0770 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0778 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0780 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0788 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0790 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0798 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 07F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0800 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0808 */  0x00, 0x00                                     
            })
            Name (ABST, Buffer (0x02)
            {
                 0x00, 0x00                                     
            })
            Name (ABGT, Buffer (0x84)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0080 */  0x00, 0x00, 0x00, 0x00                         
            })
            Scope (\_SB.PCI0.LPCB.EC0)
            {
                Method (GCMS, 1, NotSerialized)
                {
                    Store (Zero, Local0)
                    Store (Local0, Arg0)
                    Return (Zero)
                }

                Method (GOTS, 2, Serialized)
                {
                    Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                    Store (Zero, Local0)
                    Store (And (Arg0, 0xFF), Local1)
                    While (One)
                    {
                        Store (Local1, _T_0)
                        If (LEqual (_T_0, 0x82))
                        {
                            If (LEqual (TOHP, Zero))
                            {
                                Or (Local0, 0x02, Local0)
                            }
                        }
                        ElseIf (LEqual (_T_0, 0x84))
                        {
                            If (LEqual (KBBL, One))
                            {
                                Or (Local0, 0x08, Local0)
                            }
                        }

                        Break
                    }

                    Store (Local0, Arg1)
                    Return (Zero)
                }

                Method (GBL1, 1, NotSerialized)
                {
                    Store (Zero, Local0)
                    Store (Local0, Arg0)
                    Return (Zero)
                }

                Method (GBL2, 1, NotSerialized)
                {
                    Store (Zero, Local0)
                    Store (Local0, Arg0)
                    Return (Zero)
                }

                Method (GSTY, 1, NotSerialized)
                {
                    Store (Zero, Local0)
                    Store (Local0, Arg0)
                    Return (Zero)
                }

                Method (GSDA, 1, NotSerialized)
                {
                    Store (Zero, Local0)
                    Store (Local0, Arg0)
                    Return (Zero)
                }

                Method (GTTY, 1, NotSerialized)
                {
                    Store (Zero, Local0)
                    Store (Local0, Arg0)
                    Return (Zero)
                }

                Method (GTDA, 1, NotSerialized)
                {
                    Store (Zero, Local0)
                    Store (Local0, Arg0)
                    Return (Zero)
                }
            }

            OperationRegion (XCMS, SystemIO, 0x72, 0x02)
            Field (XCMS, ByteAcc, NoLock, Preserve)
            {
                CMSI,   8, 
                CMSD,   8
            }

            Method (CMSW, 2, NotSerialized)
            {
                Store (Arg0, CMSI)
                Store (Arg1, CMSD)
            }

            Method (CLBC, 2, NotSerialized)
            {
                Store (Arg0, Local1)
                Store (Arg1, Local2)
                Add (Local2, Local1, Local2)
                While (One)
                {
                    Store (Zero, Index (FEBC, Local1))
                    Add (Local1, One, Local1)
                    If (LEqual (Local1, Local2))
                    {
                        Break
                    }
                }
            }

            Method (CMSR, 1, NotSerialized)
            {
                Store (Arg0, CMSI)
                Return (CMSD)
            }

            OperationRegion (CSPR, SystemIO, PSSP, 0x02)
            Field (CSPR, ByteAcc, NoLock, Preserve)
            {
                WSSP,   8
            }

            Method (WSMI, 2, NotSerialized)
            {
                Store (Arg0, MTID)
                Store (Arg1, WMIB)
                Store (0xD0, WSSP)
            }

            Name (WQAB, Buffer (0x1E3D)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,
                /* 0008 */  0x2D, 0x1E, 0x00, 0x00, 0x8E, 0xC7, 0x00, 0x00,
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,
                /* 0018 */  0x98, 0xBC, 0x9E, 0x00, 0x01, 0x06, 0x18, 0x42,
                /* 0020 */  0x10, 0x17, 0x10, 0x22, 0x21, 0x04, 0x12, 0x01,
                /* 0028 */  0xA1, 0xC8, 0x2C, 0x0C, 0x86, 0x10, 0x38, 0x2E,
                /* 0030 */  0x84, 0x1C, 0x40, 0x48, 0x1C, 0x14, 0x4A, 0x08,
                /* 0038 */  0x84, 0xFA, 0x13, 0xC8, 0xAF, 0x00, 0x84, 0x0E,
                /* 0040 */  0x05, 0xC8, 0x14, 0x60, 0x50, 0x80, 0x53, 0x04,
                /* 0048 */  0x11, 0xF4, 0x2A, 0xC0, 0xA6, 0x00, 0x93, 0x02,
                /* 0050 */  0x2C, 0x0A, 0xD0, 0x2E, 0xC0, 0xB2, 0x00, 0xDD,
                /* 0058 */  0x02, 0xA4, 0xC3, 0x12, 0x91, 0xE0, 0x28, 0x31,
                /* 0060 */  0xE0, 0x28, 0x9D, 0xD8, 0xC2, 0x0D, 0x1B, 0xBC,
                /* 0068 */  0x50, 0x14, 0xCD, 0x20, 0x4A, 0x82, 0xCA, 0x05,
                /* 0070 */  0xF8, 0x46, 0x10, 0x78, 0xB9, 0x02, 0x24, 0x4F,
                /* 0078 */  0x40, 0x9A, 0x05, 0x18, 0x16, 0x60, 0x5D, 0x80,
                /* 0080 */  0xEC, 0x21, 0x50, 0xA9, 0x43, 0x40, 0xC9, 0x19,
                /* 0088 */  0x02, 0x6A, 0x00, 0xAD, 0x4E, 0x40, 0xF8, 0x95,
                /* 0090 */  0x4E, 0x09, 0x49, 0x10, 0xCE, 0x58, 0xC5, 0xE3,
                /* 0098 */  0x6B, 0x16, 0x4D, 0xCF, 0x49, 0xCE, 0x31, 0xE4,
                /* 00A0 */  0x78, 0x5C, 0xE8, 0x41, 0xF0, 0xA8, 0x12, 0x40,
                /* 00A8 */  0x98, 0xFC, 0x21, 0x2B, 0x1C, 0x0C, 0x4A, 0xC3,
                /* 00B0 */  0x58, 0xE8, 0xC8, 0x09, 0x30, 0x1D, 0x29, 0x1B,
                /* 00B8 */  0x90, 0x21, 0x4A, 0x82, 0x43, 0x8D, 0xDA, 0x12,
                /* 00C0 */  0x05, 0x98, 0x1F, 0x87, 0x66, 0xD7, 0xF6, 0x58,
                /* 00C8 */  0x08, 0x24, 0x93, 0x36, 0x14, 0x94, 0x14, 0x08,
                /* 00D0 */  0x8D, 0xED, 0x4C, 0x3D, 0xA3, 0x88, 0x47, 0x6A,
                /* 00D8 */  0x98, 0x04, 0x1E, 0x45, 0x64, 0xA3, 0x71, 0x68,
                /* 00E0 */  0xEC, 0x30, 0x3C, 0xCC, 0x60, 0x07, 0x71, 0x18,
                /* 00E8 */  0xC7, 0x1C, 0x39, 0x81, 0x27, 0x74, 0xA4, 0x47,
                /* 00F0 */  0x5E, 0xD8, 0x3C, 0x85, 0x1A, 0xA3, 0x39, 0x28,
                /* 00F8 */  0x22, 0xF8, 0x28, 0x80, 0x1E, 0x53, 0xD8, 0xA3,
                /* 0100 */  0x8D, 0x7D, 0xBE, 0x16, 0x3E, 0x58, 0x61, 0x1C,
                /* 0108 */  0xC1, 0x71, 0x25, 0xF8, 0xFF, 0x9F, 0xF8, 0xA1,
                /* 0110 */  0xF4, 0x08, 0x27, 0x41, 0x53, 0xA4, 0x20, 0x47,
                /* 0118 */  0x8D, 0x91, 0x85, 0x23, 0xAD, 0xB3, 0x22, 0x73,
                /* 0120 */  0x37, 0xB0, 0x81, 0x2A, 0x13, 0xA0, 0xEB, 0xBC,
                /* 0128 */  0x40, 0xC6, 0x73, 0x20, 0x18, 0x19, 0x10, 0xF2,
                /* 0130 */  0x7C, 0x2E, 0xD0, 0x08, 0x4D, 0x60, 0xF7, 0x02,
                /* 0138 */  0xB4, 0x09, 0xF0, 0x06, 0xA1, 0x71, 0x44, 0x68,
                /* 0140 */  0x4C, 0x80, 0xB5, 0x49, 0xC8, 0x16, 0x0E, 0x99,
                /* 0148 */  0x57, 0xAC, 0x28, 0x31, 0x8E, 0xE9, 0xC8, 0x6A,
                /* 0150 */  0x44, 0x11, 0xD2, 0x39, 0xBC, 0x19, 0x44, 0x88,
                /* 0158 */  0x12, 0x33, 0x64, 0xC4, 0x60, 0x41, 0x8E, 0x23,
                /* 0160 */  0x86, 0x87, 0x68, 0xB8, 0x48, 0xED, 0x0F, 0x82,
                /* 0168 */  0xC8, 0x7B, 0x4C, 0xE8, 0x3C, 0xE0, 0x48, 0xA3,
                /* 0170 */  0x41, 0x1D, 0x16, 0x7C, 0x26, 0xF0, 0xE4, 0x9E,
                /* 0178 */  0x11, 0x3C, 0xB6, 0x73, 0x0E, 0x72, 0x9E, 0xC7,
                /* 0180 */  0xF6, 0x08, 0xF1, 0x30, 0xE0, 0x61, 0xB3, 0x5B,
                /* 0188 */  0x82, 0xCF, 0x16, 0x3E, 0x1D, 0xE0, 0x5D, 0x03,
                /* 0190 */  0xEA, 0x5A, 0xF0, 0x50, 0xC0, 0x26, 0x19, 0x0E,
                /* 0198 */  0x33, 0x44, 0x8F, 0x35, 0xDC, 0x09, 0x1C, 0x22,
                /* 01A0 */  0x03, 0xF4, 0x90, 0x9E, 0x07, 0xB0, 0x73, 0x3B,
                /* 01A8 */  0x99, 0x43, 0x7F, 0x9F, 0x68, 0xF6, 0x26, 0x41,
                /* 01B0 */  0x08, 0x8E, 0xC7, 0x97, 0x08, 0x36, 0xE1, 0x47,
                /* 01B8 */  0x07, 0x32, 0x08, 0xD4, 0xC8, 0x0C, 0xED, 0xA1,
                /* 01C0 */  0x9E, 0xD6, 0xCB, 0x80, 0x8F, 0x01, 0x26, 0xB0,
                /* 01C8 */  0x58, 0x08, 0x29, 0x80, 0xD0, 0x78, 0xC0, 0xAF,
                /* 01D0 */  0xF8, 0xE0, 0x41, 0x6E, 0x0C, 0x9E, 0xAF, 0xCF,
                /* 01D8 */  0x10, 0x3A, 0x59, 0xC8, 0xC8, 0x2A, 0x3C, 0x1E,
                /* 01E0 */  0x7A, 0x5C, 0xF0, 0x1D, 0x01, 0x73, 0x61, 0xF0,
                /* 01E8 */  0xD0, 0x3D, 0xA4, 0xE7, 0x03, 0x4B, 0x3A, 0x64,
                /* 01F0 */  0xD0, 0xFF, 0xBF, 0xA8, 0x91, 0xD3, 0x43, 0x05,
                /* 01F8 */  0x3F, 0x4F, 0x30, 0xD8, 0xA0, 0x61, 0x3D, 0x98,
                /* 0200 */  0x73, 0xF2, 0x9F, 0xC5, 0x63, 0x83, 0x0F, 0x88,
                /* 0208 */  0xF7, 0x3E, 0x6B, 0x32, 0x82, 0x93, 0x35, 0xA0,
                /* 0210 */  0x0F, 0x0F, 0xB8, 0x43, 0x05, 0x78, 0x61, 0x0E,
                /* 0218 */  0x8B, 0x5F, 0x2B, 0xE0, 0x1E, 0x16, 0xD8, 0x28,
                /* 0220 */  0xF9, 0x68, 0x3C, 0x84, 0xB3, 0x78, 0x1A, 0x30,
                /* 0228 */  0x8C, 0xD1, 0x9F, 0x02, 0x60, 0xDF, 0x30, 0x3C,
                /* 0230 */  0x16, 0x4F, 0xC1, 0x27, 0x1D, 0x70, 0x0C, 0x8E,
                /* 0238 */  0x5F, 0x61, 0x70, 0x27, 0x1D, 0xE0, 0x31, 0xD7,
                /* 0240 */  0x27, 0x1D, 0xB0, 0x9D, 0x0F, 0xD8, 0x29, 0x07,
                /* 0248 */  0x96, 0x84, 0x53, 0x12, 0x2A, 0xF4, 0xB8, 0x51,
                /* 0250 */  0xFF, 0x7F, 0x02, 0x07, 0x1E, 0x3C, 0x95, 0x37,
                /* 0258 */  0x58, 0x50, 0x40, 0x1C, 0xC7, 0xDB, 0xC1, 0x6B,
                /* 0260 */  0x12, 0x8C, 0x63, 0x12, 0xC0, 0xC7, 0xA3, 0x01,
                /* 0268 */  0xBB, 0x74, 0x3C, 0x26, 0xC1, 0xFF, 0xFF, 0x1F,
                /* 0270 */  0x93, 0xC0, 0x76, 0x1C, 0x38, 0xA3, 0x93, 0x79,
                /* 0278 */  0x43, 0x8A, 0x70, 0x0E, 0x2F, 0x48, 0x0F, 0x46,
                /* 0280 */  0xAF, 0x47, 0xEF, 0x49, 0x0F, 0x4A, 0x9E, 0xD7,
                /* 0288 */  0x63, 0x92, 0xB1, 0x82, 0x84, 0xB2, 0xC2, 0x0B,
                /* 0290 */  0x92, 0x9C, 0xA1, 0x0A, 0x25, 0xC4, 0xE3, 0x92,
                /* 0298 */  0x6F, 0x0B, 0x46, 0x32, 0xF2, 0x99, 0xBC, 0x25,
                /* 02A0 */  0x19, 0xEB, 0x31, 0x09, 0x60, 0xE2, 0xFF, 0xFF,
                /* 02A8 */  0x98, 0x04, 0x3C, 0x0F, 0x15, 0x70, 0x8F, 0x49,
                /* 02B0 */  0x80, 0x93, 0xC1, 0xB1, 0xF3, 0x25, 0xB0, 0x3A,
                /* 02B8 */  0x26, 0x01, 0x97, 0xA8, 0x26, 0x40, 0x58, 0x80,
                /* 02C0 */  0x37, 0x82, 0x64, 0xAD, 0x9B, 0xC2, 0xF8, 0x94,
                /* 02C8 */  0x03, 0x9E, 0xFF, 0xFF, 0x29, 0x07, 0x70, 0x70,
                /* 02D0 */  0x97, 0xF0, 0xB9, 0x0D, 0xAC, 0x18, 0xCF, 0x1B,
                /* 02D8 */  0x16, 0x0D, 0xA8, 0x11, 0x3C, 0x3F, 0xC0, 0x3E,
                /* 02E0 */  0x5C, 0xC2, 0xBF, 0x50, 0xFA, 0x92, 0xE3, 0x49,
                /* 02E8 */  0x05, 0x39, 0x94, 0xD7, 0x9B, 0xD8, 0x61, 0x5E,
                /* 02F0 */  0x73, 0x9E, 0x2B, 0x3D, 0xB4, 0x87, 0x9C, 0x20,
                /* 02F8 */  0xEF, 0x37, 0x0F, 0x97, 0x46, 0x7A, 0xAC, 0x34,
                /* 0300 */  0x8A, 0x41, 0xCE, 0x2C, 0x6A, 0xB4, 0x28, 0xC6,
                /* 0308 */  0x0B, 0x12, 0x2D, 0xE2, 0x11, 0x3C, 0xE6, 0xB0,
                /* 0310 */  0x58, 0x07, 0x02, 0xFD, 0xA3, 0x7C, 0xCC, 0x01,
                /* 0318 */  0x1C, 0xFD, 0xFF, 0x8F, 0x39, 0xC0, 0xFD, 0x30,
                /* 0320 */  0x07, 0x8E, 0xD3, 0x02, 0x1F, 0x15, 0xBF, 0x32,
                /* 0328 */  0xB0, 0x33, 0x09, 0x30, 0x89, 0xF2, 0xF4, 0xD0,
                /* 0330 */  0x38, 0xAD, 0xF1, 0x39, 0x20, 0x1B, 0x27, 0x21,
                /* 0338 */  0x3A, 0x08, 0x2B, 0xA1, 0xD2, 0x89, 0xC5, 0x98,
                /* 0340 */  0x6F, 0x0D, 0x71, 0x9F, 0x0D, 0x3C, 0x1F, 0x4C,
                /* 0348 */  0xFA, 0x83, 0x82, 0xCE, 0x3F, 0x06, 0x77, 0x6E,
                /* 0350 */  0x12, 0xE5, 0x1E, 0x10, 0x85, 0x77, 0xD2, 0x63,
                /* 0358 */  0x10, 0x05, 0x31, 0xA0, 0x63, 0x40, 0xC8, 0xCA,
                /* 0360 */  0x41, 0x00, 0x7D, 0x9D, 0xF0, 0x91, 0xC1, 0xE7,
                /* 0368 */  0x8C, 0x28, 0x67, 0xE4, 0x03, 0xC6, 0xE3, 0x02,
                /* 0370 */  0x1B, 0x8E, 0x0F, 0x02, 0xFC, 0x80, 0xE2, 0x9B,
                /* 0378 */  0x81, 0xB1, 0xAD, 0xE6, 0xB8, 0x83, 0x02, 0x33,
                /* 0380 */  0xFC, 0x0B, 0x8C, 0x09, 0x7C, 0xCF, 0x78, 0xDB,
                /* 0388 */  0x01, 0xCB, 0x19, 0xE3, 0xB1, 0xC4, 0xFA, 0x0E,
                /* 0390 */  0x03, 0x50, 0xFE, 0xFF, 0x87, 0x01, 0x3C, 0x90,
                /* 0398 */  0xA7, 0xEF, 0x13, 0xCD, 0x23, 0x00, 0x1B, 0xC3,
                /* 03A0 */  0x43, 0x8D, 0xD1, 0x8C, 0xCE, 0xE3, 0xCF, 0x15,
                /* 03A8 */  0x75, 0x7D, 0xF4, 0x5C, 0x0D, 0xE2, 0xB9, 0x3A,
                /* 03B0 */  0x0C, 0x84, 0x9C, 0xCC, 0x15, 0x75, 0x7B, 0xF1,
                /* 03B8 */  0x88, 0xEC, 0x73, 0xAA, 0x64, 0xB0, 0x9C, 0x20,
                /* 03C0 */  0xCA, 0xAB, 0x06, 0xAC, 0x83, 0x40, 0x44, 0x36,
                /* 03C8 */  0x0F, 0xDF, 0x95, 0xF0, 0xB3, 0xE5, 0x83, 0xF1,
                /* 03D0 */  0x55, 0x02, 0xFE, 0x70, 0xF9, 0xA9, 0xE4, 0xDD,
                /* 03D8 */  0x24, 0x81, 0x05, 0x4E, 0x17, 0xE4, 0xF0, 0x18,
                /* 03E0 */  0x41, 0xEB, 0x91, 0x85, 0xBB, 0x14, 0x1D, 0x17,
                /* 03E8 */  0xBF, 0x1D, 0xF8, 0xC6, 0xC3, 0xEE, 0x34, 0xB8,
                /* 03F0 */  0x8B, 0x18, 0x06, 0xD6, 0x23, 0xE5, 0xB0, 0x46,
                /* 03F8 */  0x0B, 0x7B, 0xC0, 0x6F, 0x1C, 0x3E, 0xAE, 0x78,
                /* 0400 */  0x66, 0xC6, 0x08, 0xEB, 0x7B, 0x0A, 0x38, 0xEE,
                /* 0408 */  0x64, 0xF0, 0x03, 0x5C, 0x81, 0x40, 0xF8, 0xFF,
                /* 0410 */  0xBF, 0x02, 0xF1, 0xB3, 0x06, 0xBB, 0x92, 0x19,
                /* 0418 */  0xE4, 0x45, 0xC9, 0xE7, 0x1A, 0xA3, 0x07, 0x7A,
                /* 0420 */  0xDF, 0xC0, 0xDF, 0x84, 0x60, 0xDF, 0x40, 0xE0,
                /* 0428 */  0x0C, 0xC5, 0x37, 0x10, 0xE0, 0x70, 0x8C, 0xC0,
                /* 0430 */  0xDD, 0x40, 0x80, 0xF5, 0x1D, 0x82, 0xDD, 0x40,
                /* 0438 */  0x80, 0xE5, 0xE9, 0x05, 0x77, 0x03, 0x01, 0x6E,
                /* 0440 */  0xFF, 0xFF, 0xFB, 0x0B, 0x98, 0x6E, 0x20, 0xC0,
                /* 0448 */  0x7C, 0xD4, 0xBE, 0x81, 0x00, 0x96, 0xCE, 0x1A,
                /* 0450 */  0xEC, 0x06, 0x02, 0xFE, 0x88, 0x3E, 0xC6, 0xC3,
                /* 0458 */  0x62, 0x0C, 0x5D, 0xD2, 0x16, 0x4E, 0x61, 0x7C,
                /* 0460 */  0x4A, 0x04, 0x4E, 0xFF, 0xFF, 0x53, 0x22, 0xF0,
                /* 0468 */  0x3A, 0x57, 0xF8, 0x04, 0x00, 0xB6, 0xCB, 0x28,
                /* 0470 */  0x1B, 0xFA, 0xBB, 0x81, 0x2F, 0x8A, 0x60, 0x3C,
                /* 0478 */  0x28, 0xC2, 0x1E, 0xD5, 0x0B, 0x41, 0x88, 0xA0,
                /* 0480 */  0x6F, 0xD4, 0x9E, 0xD8, 0x4B, 0xC5, 0x0B, 0x62,
                /* 0488 */  0x90, 0xA7, 0xC3, 0x73, 0x8B, 0xF4, 0xA0, 0x68,
                /* 0490 */  0xA4, 0x30, 0x0F, 0x8A, 0x46, 0x0C, 0xE3, 0x83,
                /* 0498 */  0xA2, 0xCF, 0x89, 0x86, 0x7B, 0xBB, 0xF6, 0x79,
                /* 04A0 */  0x23, 0x52, 0xF8, 0xD8, 0xBE, 0x69, 0x44, 0x78,
                /* 04A8 */  0x50, 0x64, 0xA1, 0x0E, 0x8A, 0x80, 0xCA, 0xFF,
                /* 04B0 */  0xFF, 0x41, 0x11, 0xB8, 0x1D, 0x85, 0xC1, 0x71,
                /* 04B8 */  0x5D, 0xE6, 0x33, 0x38, 0x97, 0xD8, 0x1E, 0xE0,
                /* 04C0 */  0x73, 0x22, 0x30, 0x91, 0xBF, 0x42, 0x0D, 0xD3,
                /* 04C8 */  0x79, 0xDE, 0x32, 0xBA, 0x55, 0x71, 0x0E, 0x2B,
                /* 04D0 */  0x7F, 0x1F, 0xE8, 0xB0, 0xC5, 0x8E, 0x0B, 0x27,
                /* 04D8 */  0xF8, 0x16, 0x74, 0x4A, 0xC6, 0xF1, 0xA8, 0x3D,
                /* 04E0 */  0x7C, 0x8F, 0xC8, 0x4A, 0x21, 0x75, 0xAF, 0xE2,
                /* 04E8 */  0x1A, 0x61, 0xA4, 0xF0, 0x79, 0xA0, 0xC3, 0x11,
                /* 04F0 */  0xD7, 0x04, 0x23, 0x38, 0x83, 0xF8, 0x54, 0xE2,
                /* 04F8 */  0x24, 0x10, 0x32, 0x72, 0x12, 0x40, 0x8D, 0xCE,
                /* 0500 */  0x97, 0x15, 0xFC, 0xF8, 0x02, 0x3D, 0x32, 0x24,
                /* 0508 */  0x38, 0xB1, 0x37, 0x2B, 0xF0, 0x5E, 0xB4, 0xC1,
                /* 0510 */  0x15, 0x64, 0x52, 0x68, 0x2D, 0x97, 0x77, 0x32,
                /* 0518 */  0x28, 0x1F, 0x25, 0x5E, 0x42, 0x70, 0x04, 0xFF,
                /* 0520 */  0xFF, 0x83, 0x02, 0xEB, 0x31, 0x8F, 0x0F, 0x0A,
                /* 0528 */  0x3C, 0x07, 0x34, 0x0F, 0x0A, 0xA7, 0xE4, 0x22,
                /* 0530 */  0xE0, 0x4B, 0x0B, 0xB9, 0xA3, 0xF8, 0x48, 0xE1,
                /* 0538 */  0x31, 0x81, 0xF9, 0xDE, 0xC4, 0xC7, 0x04, 0x9E,
                /* 0540 */  0x14, 0x63, 0x42, 0x5F, 0x7D, 0xD8, 0x8D, 0x82,
                /* 0548 */  0x1D, 0x2B, 0x9E, 0xA1, 0x3C, 0x25, 0xF0, 0x22,
                /* 0550 */  0x79, 0x4A, 0xE0, 0x0A, 0x35, 0x25, 0x1F, 0x2B,
                /* 0558 */  0xE8, 0xAC, 0xF9, 0xCD, 0x80, 0x4F, 0x8A, 0x13,
                /* 0560 */  0x4C, 0x00, 0xA1, 0xBB, 0x8C, 0xC7, 0x04, 0xEF,
                /* 0568 */  0xD6, 0x0F, 0xEF, 0x86, 0xE5, 0xA1, 0xC1, 0x9A,
                /* 0570 */  0x83, 0x87, 0xC6, 0xFF, 0xFF, 0x43, 0x03, 0xC7,
                /* 0578 */  0x65, 0x0F, 0x58, 0xBC, 0x1E, 0x7C, 0x01, 0xE1,
                /* 0580 */  0x91, 0x4F, 0x10, 0x14, 0xC4, 0x07, 0x04, 0xC7,
                /* 0588 */  0x39, 0x3B, 0xFA, 0x02, 0x82, 0x3E, 0x38, 0x78,
                /* 0590 */  0x40, 0x0F, 0x4D, 0x1E, 0xD2, 0xA9, 0xBC, 0x5B,
                /* 0598 */  0xF8, 0x6E, 0xC3, 0x6E, 0x7B, 0xE0, 0xBE, 0xCD,
                /* 05A0 */  0xF9, 0xB6, 0x07, 0x9E, 0xF3, 0x92, 0x6F, 0x7B,
                /* 05A8 */  0xC0, 0x45, 0xCC, 0xF9, 0x15, 0x90, 0xF2, 0xFF,
                /* 05B0 */  0xBF, 0xED, 0x61, 0xEE, 0x67, 0xCF, 0xAF, 0xC0,
                /* 05B8 */  0xE0, 0x74, 0xC1, 0x0E, 0x7B, 0x60, 0xCB, 0xFA,
                /* 05C0 */  0xAC, 0xD0, 0xBD, 0x08, 0x97, 0x6A, 0xE5, 0x3A,
                /* 05C8 */  0x02, 0xB2, 0x7B, 0x11, 0xCC, 0x14, 0x90, 0xBA,
                /* 05D0 */  0x17, 0x71, 0xFD, 0x30, 0xD2, 0x77, 0x2F, 0x42,
                /* 05D8 */  0x29, 0xBA, 0x17, 0x51, 0x10, 0xDF, 0x8B, 0x00,
                /* 05E0 */  0x86, 0xFC, 0xFF, 0xEF, 0x45, 0x80, 0x8F, 0x10,
                /* 05E8 */  0x63, 0x42, 0xEB, 0x00, 0x26, 0xE7, 0x82, 0x13,
                /* 05F0 */  0x7A, 0x2E, 0x02, 0xB6, 0x99, 0xCE, 0x45, 0x68,
                /* 05F8 */  0x60, 0x9F, 0x0C, 0xF8, 0xA0, 0xD8, 0xB5, 0x08,
                /* 0600 */  0xCC, 0x97, 0x18, 0x5F, 0x8B, 0x00, 0x0F, 0xFF,
                /* 0608 */  0x7F, 0x02, 0xCB, 0x7B, 0x19, 0xE8, 0xFE, 0xC1,
                /* 0610 */  0x05, 0xC1, 0xE8, 0x00, 0x61, 0x10, 0xCF, 0xC9,
                /* 0618 */  0xD7, 0x22, 0xC0, 0x4D, 0x94, 0x71, 0xA1, 0xAF,
                /* 0620 */  0x68, 0x70, 0x46, 0x05, 0xEE, 0x63, 0x81, 0x47,
                /* 0628 */  0x05, 0xBE, 0x53, 0x1A, 0xFE, 0x2A, 0xE4, 0x33,
                /* 0630 */  0x1A, 0xE6, 0xA0, 0xC1, 0x8E, 0x01, 0x1E, 0x14,
                /* 0638 */  0xB8, 0x2E, 0x69, 0xB8, 0xB1, 0xC1, 0xF3, 0x70,
                /* 0640 */  0x7D, 0x00, 0xDD, 0x2D, 0x8B, 0xFF, 0xFF, 0x6F,
                /* 0648 */  0x59, 0xC0, 0xF7, 0x8C, 0x0E, 0x7C, 0x6F, 0x59,
                /* 0650 */  0x60, 0x3E, 0xA3, 0x63, 0x6E, 0x59, 0xE0, 0x94,
                /* 0658 */  0xFC, 0x28, 0xF0, 0xD9, 0x99, 0xCA, 0x5D, 0x36,
                /* 0660 */  0x85, 0xF1, 0x09, 0x1D, 0xF0, 0xF1, 0xFF, 0x3F,
                /* 0668 */  0xA1, 0xC3, 0x3D, 0x36, 0x79, 0xFC, 0xE0, 0x38,
                /* 0670 */  0x3D, 0x9C, 0xC1, 0x29, 0x44, 0x7B, 0xD5, 0xF7,
                /* 0678 */  0xC4, 0xDF, 0x9E, 0x3C, 0xA4, 0x28, 0x01, 0xE3,
                /* 0680 */  0xC5, 0x88, 0x1B, 0xD2, 0xA7, 0x6A, 0x5F, 0x9B,
                /* 0688 */  0x0D, 0x14, 0xEF, 0xB0, 0xC2, 0xC6, 0x79, 0x0D,
                /* 0690 */  0xF0, 0xE1, 0xF9, 0x35, 0xC0, 0x67, 0x03, 0x03,
                /* 0698 */  0x9D, 0xE9, 0x53, 0x3F, 0xEC, 0x83, 0x3A, 0x6C,
                /* 06A0 */  0x6F, 0x93, 0x13, 0x44, 0x84, 0xC0, 0x2F, 0x16,
                /* 06A8 */  0xE7, 0xD4, 0xDA, 0x05, 0x5D, 0x23, 0x3C, 0xC4,
                /* 06B0 */  0x07, 0xB8, 0xB7, 0x92, 0x07, 0x75, 0x0F, 0xE5,
                /* 06B8 */  0xE9, 0x29, 0x6A, 0x94, 0x53, 0x08, 0xF3, 0x8A,
                /* 06C0 */  0x1E, 0x30, 0xCA, 0xB3, 0x49, 0xB4, 0xA8, 0x81,
                /* 06C8 */  0x5F, 0x12, 0x62, 0x1B, 0x34, 0xD0, 0x7B, 0xBA,
                /* 06D0 */  0x47, 0xF0, 0xA0, 0xCE, 0xA2, 0x1D, 0xD4, 0x01,
                /* 06D8 */  0xD5, 0xFF, 0xFF, 0x83, 0x3A, 0xB8, 0xAF, 0x33,
                /* 06E0 */  0x3E, 0xC1, 0xC0, 0x3F, 0x07, 0x3C, 0x29, 0xE0,
                /* 06E8 */  0xEE, 0x4E, 0xBE, 0x33, 0x60, 0x08, 0x7C, 0x56,
                /* 06F0 */  0x07, 0x1E, 0xD1, 0x6F, 0x8B, 0x34, 0x36, 0x88,
                /* 06F8 */  0xEE, 0x90, 0xFC, 0x28, 0xE3, 0x90, 0xCB, 0xD5,
                /* 0700 */  0x1D, 0x92, 0x4F, 0x89, 0x5D, 0x10, 0x0C, 0x7F,
                /* 0708 */  0x08, 0x41, 0x3C, 0x2C, 0x36, 0x05, 0x9F, 0x11,
                /* 0710 */  0x4C, 0xE0, 0x38, 0x07, 0x2E, 0x3A, 0x78, 0x07,
                /* 0718 */  0xA1, 0x50, 0x94, 0xDB, 0x2D, 0x4A, 0x3C, 0x8C,
                /* 0720 */  0xE0, 0x0C, 0xE2, 0xA3, 0x82, 0x03, 0x41, 0xC8,
                /* 0728 */  0xC9, 0x79, 0x00, 0x75, 0x3E, 0xF1, 0xA4, 0x4E,
                /* 0730 */  0x16, 0x3B, 0x17, 0xDC, 0xEC, 0x7C, 0xA8, 0xF1,
                /* 0738 */  0xA1, 0xE7, 0x4D, 0x12, 0xBC, 0x77, 0x8E, 0x17,
                /* 0740 */  0x25, 0xB0, 0xDC, 0x34, 0x5E, 0x39, 0x5E, 0x37,
                /* 0748 */  0xD9, 0xC0, 0x70, 0x47, 0x49, 0x0F, 0x0C, 0xFF,
                /* 0750 */  0xFF, 0x3F, 0x0A, 0x1C, 0xD7, 0x49, 0x81, 0x77,
                /* 0758 */  0xCC, 0x9E, 0x14, 0xD8, 0x0E, 0x77, 0xC0, 0x22,
                /* 0760 */  0x3C, 0x3A, 0x85, 0x71, 0xDC, 0x21, 0x51, 0x10,
                /* 0768 */  0x9F, 0x0E, 0x7C, 0x6A, 0xF3, 0x68, 0x71, 0x33,
                /* 0770 */  0xF1, 0x88, 0x5E, 0xEE, 0x70, 0xA7, 0x36, 0xB0,
                /* 0778 */  0x8F, 0xC4, 0xA7, 0x36, 0xF0, 0x8C, 0x96, 0x9D,
                /* 0780 */  0xC5, 0x80, 0x89, 0x90, 0xB3, 0x18, 0xE8, 0x86,
                /* 0788 */  0xEC, 0xB3, 0x18, 0xFC, 0xFF, 0xFF, 0x59, 0x0C,
                /* 0790 */  0xB8, 0x1C, 0x03, 0x7C, 0x78, 0x02, 0xC7, 0x35,
                /* 0798 */  0x8C, 0x1F, 0x98, 0xB0, 0x40, 0xCF, 0x1E, 0x1C,
                /* 07A0 */  0xE7, 0xC9, 0xC9, 0xC0, 0x1C, 0x8C, 0x5D, 0x4D,
                /* 07A8 */  0xB0, 0xB7, 0x09, 0x13, 0x54, 0xEB, 0x6E, 0x2C,
                /* 07B0 */  0x2C, 0xC6, 0xB0, 0x25, 0x70, 0xD1, 0x14, 0xC6,
                /* 07B8 */  0x27, 0x31, 0xC0, 0xD5, 0xE8, 0xC1, 0x73, 0x12,
                /* 07C0 */  0x83, 0x35, 0x77, 0x86, 0x64, 0x54, 0x23, 0xBE,
                /* 07C8 */  0x13, 0xF8, 0x0A, 0x06, 0xFB, 0x08, 0x86, 0xFF,
                /* 07D0 */  0xFF, 0x1F, 0xC1, 0xB0, 0x87, 0xAE, 0xB7, 0x89,
                /* 07D8 */  0xD7, 0xAE, 0x23, 0x7A, 0x72, 0x89, 0x10, 0xE3,
                /* 07E0 */  0x95, 0xE2, 0xD5, 0xEB, 0x09, 0xE3, 0xD4, 0x22,
                /* 07E8 */  0x1D, 0xDC, 0x23, 0x98, 0x07, 0xF0, 0x1A, 0xF6,
                /* 07F0 */  0xEA, 0xF5, 0x08, 0xE6, 0xD3, 0x57, 0xAC, 0x47,
                /* 07F8 */  0x30, 0x03, 0x05, 0x8D, 0x18, 0x34, 0x50, 0xBC,
                /* 0800 */  0x87, 0x31, 0x0F, 0x20, 0x4E, 0x90, 0xC0, 0x8F,
                /* 0808 */  0x60, 0x00, 0xA3, 0xAC, 0x5E, 0x14, 0x90, 0x57,
                /* 0810 */  0x4A, 0xFC, 0x11, 0x0C, 0xCC, 0xFF, 0xFF, 0x23,
                /* 0818 */  0x18, 0x5E, 0xC3, 0xCB, 0x41, 0x2A, 0x40, 0xA4,
                /* 0820 */  0xE7, 0x29, 0xA3, 0x23, 0x18, 0x3F, 0x12, 0x58,
                /* 0828 */  0xC1, 0x13, 0x41, 0xF8, 0xEF, 0x31, 0x81, 0xCF,
                /* 0830 */  0xE6, 0x91, 0xE0, 0x18, 0x9E, 0x29, 0xD8, 0x85,
                /* 0838 */  0xE5, 0x81, 0xC2, 0xD3, 0x75, 0xE6, 0x03, 0x19,
                /* 0840 */  0x1D, 0xB8, 0xD3, 0xC2, 0x48, 0xD5, 0x29, 0x1A,
                /* 0848 */  0xA5, 0xE3, 0x14, 0x46, 0x41, 0x7C, 0x68, 0xF0,
                /* 0850 */  0xF1, 0x18, 0x3F, 0x38, 0x4F, 0x02, 0x7F, 0x40,
                /* 0858 */  0xE6, 0x67, 0x2F, 0x60, 0x78, 0x3D, 0x66, 0xC7,
                /* 0860 */  0x63, 0xFC, 0xC0, 0x3C, 0x53, 0x18, 0x97, 0x75,
                /* 0868 */  0xF0, 0xDE, 0x1C, 0x7C, 0x02, 0x83, 0x79, 0x3C,
                /* 0870 */  0x06, 0xD7, 0xA9, 0x14, 0x77, 0xB4, 0xE0, 0xB7,
                /* 0878 */  0x40, 0x9F, 0x3F, 0x9E, 0x7E, 0x7C, 0x92, 0xF3,
                /* 0880 */  0xE8, 0xC1, 0xF6, 0xFF, 0x9F, 0x12, 0xE6, 0x7A,
                /* 0888 */  0xE0, 0xD1, 0xC3, 0xBF, 0x7D, 0x60, 0xEF, 0x68,
                /* 0890 */  0xC0, 0x22, 0xD6, 0x45, 0x10, 0x15, 0xE4, 0x22,
                /* 0898 */  0x48, 0x41, 0x3C, 0x31, 0xDF, 0xE7, 0x7D, 0x47,
                /* 08A0 */  0xC3, 0xDD, 0xE7, 0x81, 0x17, 0x94, 0x6F, 0x69,
                /* 08A8 */  0xE0, 0x8B, 0x35, 0x2E, 0xB4, 0xA8, 0xCB, 0x03,
                /* 08B0 */  0x94, 0x09, 0x84, 0x39, 0x91, 0xE0, 0x4F, 0x22,
                /* 08B8 */  0x11, 0x1E, 0x8A, 0x7C, 0x19, 0x63, 0x63, 0x03,
                /* 08C0 */  0xFB, 0x81, 0xC2, 0x17, 0x3A, 0x60, 0xF2, 0xFF,
                /* 08C8 */  0xBF, 0xD0, 0x81, 0x4D, 0xC4, 0x85, 0x0E, 0x74,
                /* 08D0 */  0xF7, 0x0C, 0x7E, 0xA1, 0x03, 0x9E, 0xD7, 0x0D,
                /* 08D8 */  0xDF, 0xC1, 0xC0, 0x72, 0xC5, 0xE1, 0x77, 0x30,
                /* 08E0 */  0x7E, 0x03, 0x33, 0x48, 0x98, 0x98, 0x61, 0x7C,
                /* 08E8 */  0x54, 0x33, 0xCE, 0x73, 0x18, 0x43, 0x7A, 0x4A,
                /* 08F0 */  0xC0, 0x9E, 0x3C, 0x9C, 0xEF, 0xDE, 0x83, 0x1A,
                /* 08F8 */  0x8A, 0x33, 0xBD, 0x0A, 0x34, 0xF5, 0xF3, 0xF5,
                /* 0900 */  0xE9, 0x05, 0x46, 0x0E, 0x38, 0x5D, 0x7B, 0x78,
                /* 0908 */  0x02, 0x18, 0xE9, 0x5F, 0xBE, 0x0E, 0x1B, 0x5C,
                /* 0910 */  0xF1, 0xED, 0x87, 0x82, 0xF8, 0x4A, 0xE2, 0x34,
                /* 0918 */  0xD7, 0x1E, 0xB4, 0x1E, 0x10, 0xF9, 0x1C, 0xBB,
                /* 0920 */  0x86, 0xF0, 0xE0, 0x03, 0xBC, 0xFE, 0xFF, 0x07,
                /* 0928 */  0x1F, 0xF0, 0xE4, 0x3A, 0xF8, 0xA0, 0x07, 0xE3,
                /* 0930 */  0x69, 0xC1, 0xBA, 0xF9, 0x00, 0x0E, 0x8E, 0x00,
                /* 0938 */  0x70, 0xAE, 0x5C, 0x27, 0x7F, 0x64, 0x8F, 0x00,
                /* 0940 */  0xC0, 0xE6, 0xF4, 0x03, 0x8E, 0x23, 0x00, 0x18,
                /* 0948 */  0xA6, 0x05, 0xEB, 0x08, 0x00, 0x9C, 0x90, 0x7C,
                /* 0950 */  0x04, 0xC0, 0xFE, 0xFF, 0xEF, 0x52, 0xC0, 0x7B,
                /* 0958 */  0x98, 0xBE, 0x4B, 0x01, 0xE7, 0x2F, 0x84, 0xEF,
                /* 0960 */  0x23, 0x3C, 0xF2, 0x35, 0x82, 0x82, 0xF8, 0x8A,
                /* 0968 */  0xE0, 0xBB, 0x14, 0xF0, 0xBC, 0x00, 0xF9, 0x82,
                /* 0970 */  0x04, 0xBC, 0x25, 0x5C, 0x90, 0xD0, 0xFF, 0xFF,
                /* 0978 */  0x0B, 0x12, 0xFC, 0x61, 0xFB, 0x82, 0x04, 0x5C,
                /* 0980 */  0x51, 0x7D, 0x41, 0x02, 0xC7, 0x5D, 0x88, 0xDD,
                /* 0988 */  0x8F, 0xC0, 0xAA, 0xF5, 0x47, 0xA1, 0xFB, 0x11,
                /* 0990 */  0xE7, 0xB0, 0xD2, 0x45, 0xEB, 0x54, 0xCD, 0x2E,
                /* 0998 */  0xB8, 0xC7, 0xF9, 0x96, 0xF3, 0x0E, 0x60, 0x1C,
                /* 09A0 */  0xCF, 0xC5, 0xE7, 0x09, 0xE3, 0x27, 0xA8, 0x0C,
                /* 09A8 */  0x52, 0x37, 0x24, 0xAE, 0x09, 0x46, 0xDA, 0x0E,
                /* 09B0 */  0x9A, 0x28, 0x35, 0x07, 0x4D, 0x0A, 0xE2, 0x83,
                /* 09B8 */  0x26, 0xE0, 0xEB, 0xFF, 0x7F, 0x3D, 0x02, 0x7C,
                /* 09C0 */  0x84, 0x19, 0x3F, 0x7A, 0x32, 0xBE, 0x13, 0xE0,
                /* 09C8 */  0xCF, 0xCF, 0x3E, 0x92, 0xF8, 0x08, 0xFE, 0x78,
                /* 09D0 */  0x04, 0x4C, 0xEF, 0x33, 0xC0, 0x22, 0xF6, 0xED,
                /* 09D8 */  0x01, 0x15, 0xF4, 0xF6, 0x40, 0x41, 0x7C, 0x29,
                /* 09E0 */  0xF1, 0x59, 0x13, 0x58, 0xFF, 0xFF, 0xEF, 0x33,
                /* 09E8 */  0x60, 0xB9, 0x64, 0xE0, 0x6F, 0xFF, 0xEC, 0xFE,
                /* 09F0 */  0xF0, 0x80, 0xEE, 0x2B, 0x06, 0x3F, 0x65, 0x02,
                /* 09F8 */  0xCF, 0x43, 0x01, 0xBB, 0x64, 0xC0, 0x38, 0x51,
                /* 0A00 */  0x78, 0x54, 0x9C, 0xC0, 0x21, 0x86, 0x41, 0x07,
                /* 0A08 */  0x05, 0xAE, 0x43, 0x06, 0xA7, 0xF1, 0xFD, 0x08,
                /* 0A10 */  0xEE, 0x25, 0x03, 0x5C, 0xC1, 0x86, 0x86, 0x96,
                /* 0A18 */  0x72, 0x4C, 0xA0, 0xC7, 0x1B, 0x76, 0x8E, 0xF7,
                /* 0A20 */  0xBD, 0x87, 0x0D, 0x0E, 0xDC, 0x87, 0x0C, 0x0F,
                /* 0A28 */  0x0E, 0xDE, 0x6D, 0xC3, 0x83, 0x83, 0xF9, 0xFF,
                /* 0A30 */  0x1F, 0x1C, 0x8C, 0xAB, 0x14, 0xF0, 0x08, 0x3E,
                /* 0A38 */  0x76, 0xD4, 0x55, 0x0A, 0x1C, 0xE7, 0x3A, 0x7E,
                /* 0A40 */  0x95, 0x02, 0x9E, 0x03, 0x7C, 0x95, 0x02, 0xCB,
                /* 0A48 */  0xB5, 0x89, 0xCD, 0xE1, 0xB9, 0x89, 0x5F, 0xA5,
                /* 0A50 */  0x7C, 0xA8, 0xC1, 0x5E, 0x61, 0x7C, 0xBD, 0xD1,
                /* 0A58 */  0xA9, 0x15, 0xC5, 0xE1, 0x28, 0xA7, 0x56, 0xC4,
                /* 0A60 */  0x2D, 0x0A, 0xA6, 0xF4, 0x73, 0x2B, 0x4A, 0x34,
                /* 0A68 */  0x8C, 0x24, 0x9F, 0x5B, 0x51, 0x22, 0xCF, 0xAD,
                /* 0A70 */  0x14, 0xC4, 0x27, 0x04, 0xDF, 0xA2, 0x80, 0xD5,
                /* 0A78 */  0xFF, 0xFF, 0x16, 0x05, 0x58, 0x3E, 0xB4, 0xC2,
                /* 0A80 */  0x01, 0x7C, 0x8C, 0x02, 0x1C, 0x5C, 0x44, 0x7D,
                /* 0A88 */  0x0D, 0x82, 0x3F, 0x26, 0xB0, 0x22, 0x79, 0x4C,
                /* 0A90 */  0x60, 0xF8, 0xFF, 0x8F, 0x09, 0x17, 0xE8, 0x8E,
                /* 0A98 */  0x80, 0x56, 0x71, 0x09, 0x42, 0xDE, 0x10, 0xC0,
                /* 0AA0 */  0x4B, 0xE3, 0x13, 0x2B, 0xCC, 0x1B, 0x02, 0xB8,
                /* 0AA8 */  0x2E, 0xAC, 0x00, 0x8B, 0x8E, 0x45, 0xD8, 0xFF,
                /* 0AB0 */  0xFF, 0xB1, 0x08, 0x0C, 0x37, 0x03, 0x7E, 0x2C,
                /* 0AB8 */  0x02, 0x7C, 0x5C, 0x58, 0xF9, 0xB1, 0x08, 0x7C,
                /* 0AC0 */  0x61, 0x8E, 0x45, 0x08, 0x91, 0xE3, 0x10, 0xC2,
                /* 0AC8 */  0xC3, 0x0D, 0x0C, 0x82, 0xE2, 0x8F, 0x45, 0x28,
                /* 0AD0 */  0xD9, 0x30, 0x12, 0x7D, 0x2C, 0x42, 0xC9, 0x3C,
                /* 0AD8 */  0x16, 0x51, 0x10, 0x9F, 0x31, 0x1C, 0xE4, 0x82,
                /* 0AE0 */  0x82, 0x3E, 0xA8, 0x79, 0x50, 0xAF, 0xB4, 0xEC,
                /* 0AE8 */  0xFC, 0xE1, 0xC1, 0xF1, 0x53, 0x11, 0xF0, 0xBC,
                /* 0AF0 */  0xC8, 0xC3, 0x99, 0x2A, 0xBC, 0x53, 0xCA, 0xFF,
                /* 0AF8 */  0xFF, 0xB5, 0x08, 0xF8, 0xDF, 0xB2, 0x80, 0xE1,
                /* 0B00 */  0xA9, 0x08, 0x58, 0x5C, 0x00, 0x18, 0x72, 0xF3,
                /* 0B08 */  0xD7, 0x04, 0x72, 0x2A, 0x02, 0xA6, 0x17, 0x31,
                /* 0B10 */  0x38, 0xF7, 0x47, 0x18, 0x47, 0x04, 0xF0, 0x02,
                /* 0B18 */  0xFF, 0xFF, 0x9F, 0x8B, 0x00, 0x36, 0xC6, 0x3E,
                /* 0B20 */  0x17, 0x81, 0x0E, 0x96, 0x9F, 0x8B, 0xC0, 0xFC,
                /* 0B28 */  0xFF, 0x3F, 0x17, 0x81, 0x6D, 0x8E, 0xCF, 0x45,
                /* 0B30 */  0x60, 0xBB, 0x7D, 0x30, 0x90, 0x70, 0x2F, 0x29,
                /* 0B38 */  0xD8, 0x13, 0x87, 0xE3, 0xBD, 0x25, 0x74, 0x2C,
                /* 0B40 */  0xE2, 0x17, 0x08, 0x07, 0x5A, 0xA3, 0x60, 0x03,
                /* 0B48 */  0x9E, 0x43, 0xD7, 0x43, 0x17, 0xA8, 0x27, 0x50,
                /* 0B50 */  0xE3, 0x24, 0x04, 0x72, 0x88, 0xC1, 0x0F, 0xE0,
                /* 0B58 */  0xD8, 0x0C, 0x16, 0x23, 0xDA, 0x73, 0xD2, 0x6B,
                /* 0B60 */  0x90, 0xB1, 0x8E, 0xDA, 0x57, 0x25, 0xDF, 0x49,
                /* 0B68 */  0x04, 0xAF, 0xC3, 0x11, 0x97, 0x0B, 0x23, 0xB1,
                /* 0B70 */  0xFF, 0x0B, 0x1D, 0x21, 0xB8, 0xBC, 0x33, 0x12,
                /* 0B78 */  0x05, 0xF1, 0xF8, 0x9C, 0xE3, 0x12, 0xE2, 0xC3,
                /* 0B80 */  0x11, 0x28, 0x34, 0x1F, 0x8E, 0x40, 0x7C, 0xFC,
                /* 0B88 */  0x00, 0xD7, 0x9C, 0xE0, 0xCC, 0xFF, 0xFD, 0xE0,
                /* 0B90 */  0x94, 0x9E, 0x53, 0x7C, 0x2E, 0x30, 0xC2, 0x61,
                /* 0B98 */  0x9D, 0x13, 0x78, 0xEF, 0x44, 0x60, 0xF8, 0xFF,
                /* 0BA0 */  0xCF, 0x09, 0x7B, 0xDD, 0xF1, 0x9C, 0x70, 0x77,
                /* 0BA8 */  0x19, 0xCF, 0xE9, 0x51, 0xA0, 0x62, 0x4C, 0xDD,
                /* 0BB0 */  0x0F, 0xA2, 0x47, 0x79, 0x76, 0xF0, 0x98, 0xC0,
                /* 0BB8 */  0x7A, 0x2E, 0xF0, 0xB4, 0xC1, 0x7F, 0x56, 0x7B,
                /* 0BC0 */  0x20, 0x7A, 0xA7, 0xF0, 0x59, 0xC5, 0xB0, 0x51,
                /* 0BC8 */  0x3D, 0x27, 0xF0, 0xDE, 0xA5, 0xF9, 0xB4, 0xC1,
                /* 0BD0 */  0x7D, 0x3F, 0x39, 0xA3, 0x93, 0x7E, 0x47, 0x79,
                /* 0BD8 */  0x32, 0x60, 0xE7, 0x0E, 0x8F, 0x09, 0xAC, 0x67,
                /* 0BE0 */  0x21, 0xF0, 0x8D, 0x09, 0x0C, 0xC7, 0x91, 0x63,
                /* 0BE8 */  0x02, 0xCF, 0xFF, 0x7F, 0x4C, 0xF8, 0x7B, 0x3E,
                /* 0BF0 */  0xF8, 0x0E, 0x56, 0x70, 0x4E, 0xAF, 0xFC, 0x6E,
                /* 0BF8 */  0xC0, 0x0F, 0x56, 0x60, 0x3E, 0x1A, 0x7B, 0x68,
                /* 0C00 */  0xB0, 0x6E, 0xF9, 0xE0, 0x3B, 0x58, 0x01, 0x26,
                /* 0C08 */  0x3D, 0x1C, 0xAC, 0x80, 0xCC, 0xFF, 0xFF, 0x60,
                /* 0C10 */  0x05, 0x36, 0x11, 0x8B, 0xD5, 0xC1, 0x0A, 0x5C,
                /* 0C18 */  0x37, 0x03, 0x7E, 0xB0, 0x02, 0x9E, 0xB7, 0x42,
                /* 0C20 */  0x1F, 0xAC, 0xC0, 0x71, 0x94, 0xE2, 0x83, 0x78,
                /* 0C28 */  0x95, 0xE2, 0x28, 0xCF, 0x52, 0x78, 0x38, 0xDF,
                /* 0C30 */  0xA5, 0xE0, 0x9C, 0xAF, 0x2C, 0xFC, 0x8D, 0xA1,
                /* 0C38 */  0xF3, 0x15, 0x97, 0x74, 0x9A, 0xF2, 0x9A, 0x75,
                /* 0C40 */  0xDA, 0x62, 0xE3, 0x3F, 0x8C, 0x57, 0x28, 0x4F,
                /* 0C48 */  0x24, 0x6E, 0xEC, 0xB8, 0x91, 0x4F, 0xE0, 0x84,
                /* 0C50 */  0x4E, 0xC7, 0x60, 0x8F, 0x5A, 0x3A, 0xBF, 0xD2,
                /* 0C58 */  0x33, 0x0F, 0x81, 0x91, 0xFC, 0x43, 0x04, 0x4A,
                /* 0C60 */  0x30, 0x8C, 0xE0, 0x0C, 0xE2, 0x73, 0x80, 0x8F,
                /* 0C68 */  0xB1, 0xBE, 0xA9, 0xE0, 0xB4, 0x1C, 0xC3, 0x10,
                /* 0C70 */  0x57, 0x08, 0x0F, 0xCA, 0x03, 0x79, 0xB8, 0xF7,
                /* 0C78 */  0xD5, 0x0A, 0xEC, 0xFF, 0xFF, 0x0B, 0x08, 0x98,
                /* 0C80 */  0x52, 0x0C, 0x0A, 0x0D, 0xEC, 0x41, 0x45, 0x7C,
                /* 0C88 */  0x6E, 0x3A, 0xFD, 0x67, 0x22, 0x0F, 0xD4, 0x37,
                /* 0C90 */  0x2B, 0x60, 0x79, 0x46, 0x01, 0x16, 0xB1, 0xCE,
                /* 0C98 */  0x03, 0xA8, 0x20, 0xE7, 0x01, 0x0A, 0xE2, 0x81,
                /* 0CA0 */  0x39, 0xCC, 0x58, 0xD1, 0x67, 0x14, 0xB8, 0x57,
                /* 0CA8 */  0x8C, 0x67, 0x14, 0x30, 0x9F, 0xBA, 0xC0, 0x17,
                /* 0CB0 */  0xEC, 0x2E, 0x84, 0x3E, 0x75, 0xF9, 0xCE, 0x0A,
                /* 0CB8 */  0x83, 0x60, 0x88, 0xC3, 0x10, 0x1D, 0x15, 0x18,
                /* 0CC0 */  0xFE, 0xFF, 0xA7, 0x21, 0x18, 0x63, 0xE4, 0x83,
                /* 0CC8 */  0x83, 0x73, 0xFB, 0x02, 0xDF, 0x71, 0x06, 0x78,
                /* 0CD0 */  0xBC, 0x0B, 0x7C, 0x9C, 0x01, 0xD7, 0xC9, 0xC7,
                /* 0CD8 */  0xC7, 0x19, 0xE0, 0x2A, 0xF8, 0xD8, 0x09, 0xBA,
                /* 0CE0 */  0x9B, 0x0B, 0x47, 0x79, 0x74, 0x81, 0x83, 0x15,
                /* 0CE8 */  0xF4, 0x01, 0xCC, 0x77, 0x09, 0xDF, 0xF0, 0x59,
                /* 0CF0 */  0xFA, 0xC3, 0x0C, 0xEA, 0xBC, 0xE4, 0xCC, 0x2B,
                /* 0CF8 */  0x96, 0xC7, 0xC3, 0x0C, 0x08, 0x66, 0x80, 0x23,
                /* 0D00 */  0x98, 0xED, 0x3C, 0x83, 0x4A, 0x05, 0x23, 0xFD,
                /* 0D08 */  0x07, 0x0E, 0xF2, 0xFF, 0x3F, 0x70, 0x30, 0xC5,
                /* 0D10 */  0x07, 0x0E, 0x0A, 0xE2, 0xF3, 0x0C, 0xBC, 0xC1,
                /* 0D18 */  0xB0, 0xF3, 0x0C, 0xB0, 0xBE, 0xEC, 0xC1, 0x3A,
                /* 0D20 */  0x6E, 0xE0, 0xEF, 0x33, 0x80, 0x2B, 0x51, 0x3F,
                /* 0D28 */  0x02, 0xDD, 0x07, 0xB8, 0x0C, 0x18, 0xCD, 0xC8,
                /* 0D30 */  0x20, 0xBE, 0x9D, 0xF8, 0x3E, 0x03, 0x5C, 0xFF,
                /* 0D38 */  0xFF, 0xD3, 0x05, 0xD7, 0xAD, 0x01, 0x0F, 0xEC,
                /* 0D40 */  0x1B, 0x01, 0xC3, 0x3C, 0xA4, 0x73, 0xF1, 0xA0,
                /* 0D48 */  0xC0, 0x7E, 0x8F, 0x01, 0xDF, 0x65, 0xD0, 0x57,
                /* 0D50 */  0x06, 0x0F, 0x1D, 0x07, 0xFC, 0x5A, 0xF1, 0x2E,
                /* 0D58 */  0xED, 0x5B, 0x55, 0xD0, 0x63, 0x7A, 0x32, 0xF1,
                /* 0D60 */  0x89, 0xF2, 0x65, 0x10, 0xFC, 0xA7, 0x02, 0x5F,
                /* 0D68 */  0x06, 0xC1, 0x63, 0x4C, 0x80, 0xB6, 0xCB, 0x20,
                /* 0D70 */  0x90, 0xB9, 0xEE, 0x80, 0x0F, 0xDC, 0xD7, 0x1D,
                /* 0D78 */  0x70, 0xFD, 0xFF, 0xAF, 0x3B, 0xC0, 0xF3, 0xFE,
                /* 0D80 */  0xC2, 0xAE, 0x3B, 0x60, 0x0C, 0x70, 0xDD, 0x41,
                /* 0D88 */  0x89, 0xBA, 0xAA, 0x7B, 0xC5, 0x1A, 0x89, 0x4F,
                /* 0D90 */  0x2B, 0x81, 0x0D, 0xF2, 0x3C, 0x77, 0xCA, 0x6F,
                /* 0D98 */  0xED, 0xF0, 0x04, 0x5E, 0x76, 0x50, 0xD2, 0x60,
                /* 0DA0 */  0x14, 0xE0, 0xB2, 0x83, 0x92, 0x7C, 0xD9, 0xA1,
                /* 0DA8 */  0x20, 0x3E, 0x06, 0xF8, 0xD6, 0x0E, 0xD8, 0x38,
                /* 0DB0 */  0x10, 0xC1, 0x39, 0xEC, 0xE0, 0xF1, 0x0F, 0x0A,
                /* 0DB8 */  0xCC, 0xA7, 0x1D, 0xCC, 0xFF, 0xFF, 0xB4, 0x03,
                /* 0DC0 */  0x5C, 0x83, 0x1D, 0x08, 0x50, 0x51, 0x0E, 0x04,
                /* 0DC8 */  0x14, 0xC4, 0x97, 0x41, 0xC0, 0x4D, 0xB4, 0xCB,
                /* 0DD0 */  0x20, 0x7A, 0x58, 0xFC, 0x4A, 0x80, 0x3B, 0x3A,
                /* 0DD8 */  0x1C, 0x0E, 0xBB, 0x0D, 0x02, 0xCE, 0xFE, 0xFF,
                /* 0DE0 */  0xE7, 0x19, 0xB8, 0x12, 0xCE, 0x33, 0xA0, 0x33,
                /* 0DE8 */  0x71, 0x9E, 0x01, 0xBA, 0x87, 0x1D, 0x7E, 0x57,
                /* 0DF0 */  0x06, 0xC3, 0xE1, 0x05, 0x73, 0x54, 0x06, 0x1B,
                /* 0DF8 */  0xC1, 0xEC, 0xAF, 0x0F, 0x1D, 0x68, 0x38, 0x87,
                /* 0E00 */  0xB3, 0x2F, 0x5A, 0x67, 0x1C, 0x26, 0x72, 0x18,
                /* 0E08 */  0x42, 0x08, 0x1F, 0xFA, 0x68, 0x22, 0x9C, 0xC3,
                /* 0E10 */  0x23, 0xB4, 0xC7, 0xC7, 0xB2, 0x42, 0xEA, 0x38,
                /* 0E18 */  0xC3, 0x53, 0xC2, 0x48, 0xD5, 0x59, 0x0D, 0xA5,
                /* 0E20 */  0xE3, 0xAC, 0x46, 0x41, 0x7C, 0x76, 0xF0, 0x55,
                /* 0E28 */  0xC5, 0x27, 0x2C, 0xDC, 0x71, 0x06, 0xDE, 0x35,
                /* 0E30 */  0xDB, 0xC7, 0x19, 0xB0, 0x0E, 0xD1, 0xD7, 0x07,
                /* 0E38 */  0x98, 0xFF, 0xFF, 0xEB, 0x15, 0xFE, 0x2A, 0xE8,
                /* 0E40 */  0x41, 0xE1, 0x90, 0x3D, 0x55, 0x86, 0xFC, 0x0A,
                /* 0E48 */  0x76, 0x58, 0x1E, 0x13, 0x78, 0x67, 0xEB, 0x31,
                /* 0E50 */  0x81, 0x2D, 0xD6, 0x79, 0x04, 0x7D, 0xE3, 0x81,
                /* 0E58 */  0x99, 0xE0, 0x3A, 0x42, 0x27, 0x05, 0xEF, 0x36,
                /* 0E60 */  0x02, 0x0F, 0xCC, 0x73, 0x83, 0x75, 0x74, 0x01,
                /* 0E68 */  0xDF, 0xC5, 0x07, 0x58, 0xC4, 0x59, 0x92, 0xAE,
                /* 0E70 */  0x0E, 0x3C, 0xC0, 0xFD, 0x8A, 0x82, 0x78, 0x58,
                /* 0E78 */  0xBE, 0xEB, 0xD9, 0xC9, 0xC5, 0x07, 0x34, 0x77,
                /* 0E80 */  0x3D, 0x30, 0xFD, 0xFF, 0xEF, 0x32, 0xB0, 0xEE,
                /* 0E88 */  0x7A, 0xE0, 0x71, 0x26, 0x40, 0x19, 0x24, 0xB9,
                /* 0E90 */  0x1F, 0xF9, 0x86, 0x81, 0x47, 0x7D, 0x74, 0x79,
                /* 0E98 */  0xA1, 0xC5, 0xDE, 0x08, 0x81, 0xF1, 0xFD, 0x08,
                /* 0EA0 */  0xCE, 0xF1, 0x04, 0xDE, 0xFD, 0x08, 0xDC, 0xF7,
                /* 0EA8 */  0x1A, 0x0F, 0x0F, 0xDE, 0x05, 0x88, 0xDF, 0x32,
                /* 0EB0 */  0xC1, 0x3D, 0x37, 0xFC, 0x29, 0xE2, 0x19, 0xC8,
                /* 0EB8 */  0x87, 0x00, 0xB0, 0x9F, 0x22, 0x7C, 0x08, 0xF8,
                /* 0EC0 */  0xFF, 0x3F, 0x04, 0x00, 0x83, 0x3B, 0x17, 0x70,
                /* 0EC8 */  0x3A, 0x04, 0xC0, 0x3D, 0xA7, 0xF3, 0x3B, 0x17,
                /* 0ED0 */  0xF0, 0x8D, 0x7D, 0x46, 0x40, 0xDD, 0xB9, 0xC0,
                /* 0ED8 */  0xA1, 0xE2, 0xCE, 0x05, 0x74, 0xE7, 0xF8, 0x4A,
                /* 0EE0 */  0x0A, 0xB6, 0x23, 0x07, 0xFB, 0xFF, 0x83, 0xBC,
                /* 0EE8 */  0xFB, 0xFA, 0x1C, 0x81, 0x3B, 0x19, 0x39, 0xD5,
                /* 0EF0 */  0x8E, 0x1F, 0x53, 0xD8, 0x83, 0x46, 0x12, 0xD7,
                /* 0EF8 */  0x4A, 0x61, 0x7C, 0x7A, 0xF0, 0x21, 0x01, 0x3F,
                /* 0F00 */  0xE0, 0xE3, 0x3D, 0xCC, 0x23, 0x62, 0x92, 0xE0,
                /* 0F08 */  0x50, 0x67, 0x01, 0xCF, 0xE1, 0xE9, 0xE9, 0x68,
                /* 0F10 */  0xDE, 0xC2, 0x7C, 0x1F, 0x33, 0x24, 0x93, 0x36,
                /* 0F18 */  0x34, 0xD4, 0xD1, 0xC5, 0x03, 0x7A, 0x1F, 0xF3,
                /* 0F20 */  0xC1, 0xCC, 0xF7, 0x1B, 0xC3, 0x24, 0xF0, 0x29,
                /* 0F28 */  0x80, 0x1D, 0xCB, 0x18, 0x5A, 0x68, 0xEC, 0x30,
                /* 0F30 */  0x3C, 0xD6, 0x60, 0x07, 0x71, 0x18, 0xAF, 0x00,
                /* 0F38 */  0x26, 0xF0, 0x84, 0x9E, 0x0D, 0xCA, 0xBD, 0x63,
                /* 0F40 */  0x48, 0x3C, 0xAA, 0x30, 0x9A, 0x83, 0x22, 0xF2,
                /* 0F48 */  0x07, 0x0D, 0x9A, 0x23, 0xC3, 0x19, 0x9C, 0x30,
                /* 0F50 */  0x1B, 0xF3, 0xA3, 0x8D, 0x2F, 0x05, 0x46, 0x79,
                /* 0F58 */  0x0C, 0x3D, 0x67, 0x83, 0x54, 0x38, 0x4E, 0x5D,
                /* 0F60 */  0x32, 0xCE, 0x23, 0x4A, 0x34, 0x63, 0x07, 0xF7,
                /* 0F68 */  0xBD, 0xCD, 0x38, 0xCF, 0x09, 0xA1, 0x6A, 0x9D,
                /* 0F70 */  0x1C, 0x81, 0x39, 0x06, 0x06, 0xF4, 0xCE, 0x73,
                /* 0F78 */  0xFE, 0x4F, 0x13, 0xBE, 0x58, 0x7A, 0x3C, 0xFC,
                /* 0F80 */  0x6C, 0x60, 0xE0, 0x97, 0x0A, 0x9F, 0x11, 0x98,
                /* 0F88 */  0xFB, 0x0B, 0x9D, 0xBC, 0x09, 0xB0, 0x86, 0x21,
                /* 0F90 */  0x88, 0xB7, 0x90, 0x08, 0xB6, 0x35, 0x13, 0x61,
                /* 0F98 */  0x87, 0x78, 0x07, 0x8A, 0x72, 0x80, 0xC7, 0x14,
                /* 0FA0 */  0x2C, 0x6A, 0x94, 0x1F, 0x82, 0x43, 0x7C, 0x1C,
                /* 0FA8 */  0x39, 0xAF, 0x28, 0x71, 0x63, 0x05, 0x8C, 0x10,
                /* 0FB0 */  0x39, 0xEC, 0x89, 0xBC, 0x56, 0x04, 0x37, 0x6C,
                /* 0FB8 */  0xAC, 0xF6, 0x07, 0x41, 0x62, 0x1D, 0x0B, 0x74,
                /* 0FC0 */  0x14, 0x71, 0xA4, 0xD1, 0xA0, 0x4E, 0x1A, 0x3E,
                /* 0FC8 */  0x1A, 0xF8, 0xDE, 0xE5, 0x73, 0xB0, 0x47, 0x11,
                /* 0FD0 */  0xE4, 0x7D, 0xCF, 0x3A, 0xCF, 0x04, 0x64, 0xF4,
                /* 0FD8 */  0xEC, 0x44, 0xE2, 0x6F, 0xC2, 0xFF, 0xFF, 0x21,
                /* 0FE0 */  0x01, 0x86, 0x6B, 0x40, 0x9D, 0xBE, 0x7D, 0xAA,
                /* 0FE8 */  0x00, 0xC7, 0x01, 0x06, 0xFE, 0x78, 0x7C, 0x18,
                /* 0FF0 */  0xF0, 0xA1, 0x98, 0x9D, 0x0A, 0xD8, 0x20, 0xF8,
                /* 0FF8 */  0x3D, 0x8E, 0x5F, 0x9A, 0x7D, 0x0B, 0xF0, 0xFD,
                /* 1000 */  0xC5, 0x04, 0x3E, 0xB0, 0xF8, 0x3E, 0xE6, 0xF1,
                /* 1008 */  0x80, 0xFF, 0xC2, 0xFE, 0x54, 0x10, 0xE1, 0xC5,
                /* 1010 */  0xC1, 0xF3, 0x35, 0x41, 0x79, 0x47, 0x16, 0x50,
                /* 1018 */  0xDC, 0x15, 0x38, 0xC2, 0xB3, 0x02, 0xEE, 0xF4,
                /* 1020 */  0xE4, 0x33, 0x04, 0x16, 0x9E, 0x1F, 0x02, 0x1E,
                /* 1028 */  0x5E, 0x18, 0xF0, 0xFB, 0x8B, 0xA7, 0x70, 0x38,
                /* 1030 */  0x3E, 0x5D, 0x18, 0x21, 0xFC, 0x43, 0xC5, 0x43,
                /* 1038 */  0x86, 0x8F, 0x10, 0xE7, 0xF3, 0xDE, 0x8F, 0x51,
                /* 1040 */  0xFA, 0x73, 0xD3, 0x78, 0x9C, 0xF6, 0x39, 0xA0,
                /* 1048 */  0x5B, 0x36, 0x2E, 0xE5, 0x62, 0x85, 0xFF, 0xFE,
                /* 1050 */  0x12, 0xF8, 0x98, 0x1F, 0x08, 0xDE, 0x95, 0xF0,
                /* 1058 */  0xB3, 0x78, 0xCC, 0x38, 0xA5, 0x67, 0x00, 0x13,
                /* 1060 */  0x38, 0xD1, 0x05, 0x92, 0x8E, 0xDC, 0x59, 0x28,
                /* 1068 */  0x94, 0x7B, 0x50, 0x14, 0xCE, 0x49, 0x8F, 0x82,
                /* 1070 */  0x14, 0xC4, 0x80, 0xBE, 0x23, 0xFA, 0xD4, 0x80,
                /* 1078 */  0x1B, 0x3A, 0x9B, 0xC5, 0x9B, 0xA6, 0x67, 0xED,
                /* 1080 */  0x71, 0xFC, 0xFF, 0x5F, 0x23, 0x81, 0xDB, 0x7D,
                /* 1088 */  0x01, 0x7B, 0xF1, 0x03, 0x16, 0x91, 0x4E, 0xD0,
                /* 1090 */  0xA8, 0x10, 0x27, 0x68, 0x0A, 0xE2, 0x89, 0xF9,
                /* 1098 */  0xE2, 0x07, 0x3C, 0x47, 0xE3, 0x8B, 0x1F, 0xF8,
                /* 10A0 */  0xEE, 0x25, 0x1E, 0x17, 0xEE, 0xBD, 0xE0, 0xA3,
                /* 10A8 */  0x02, 0xCC, 0xBB, 0x1F, 0x30, 0xB8, 0x2F, 0x78,
                /* 10B0 */  0x64, 0xE0, 0xF8, 0xFF, 0x8F, 0x0C, 0x77, 0xF5,
                /* 10B8 */  0x02, 0x1E, 0xF1, 0xAF, 0x5E, 0xA0, 0xBB, 0xD3,
                /* 10C0 */  0xF3, 0xAB, 0x17, 0xF0, 0xBC, 0x96, 0xBC, 0x36,
                /* 10C8 */  0x81, 0xE7, 0x52, 0xC2, 0x6F, 0x5E, 0x30, 0x90,
                /* 10D0 */  0xA2, 0xBD, 0x1B, 0xF0, 0x81, 0xF9, 0x1E, 0xE4,
                /* 10D8 */  0x43, 0x87, 0x65, 0x5C, 0x53, 0x50, 0xB7, 0x2B,
                /* 10E0 */  0x47, 0x5F, 0xA7, 0x2E, 0x63, 0x6C, 0xF6, 0xD1,
                /* 10E8 */  0xE3, 0x3F, 0x3C, 0xF9, 0x22, 0x13, 0xF8, 0x79,
                /* 10F0 */  0x01, 0x7F, 0xF5, 0xC4, 0x07, 0x3C, 0x67, 0x50,
                /* 10F8 */  0x08, 0x47, 0xA3, 0xD0, 0xF9, 0x1F, 0xEE, 0x71,
                /* 1100 */  0x03, 0xDC, 0xFF, 0xFF, 0x53, 0x04, 0xB8, 0x08,
                /* 1108 */  0x7C, 0x8A, 0x00, 0x5F, 0xB0, 0x71, 0xA1, 0x8F,
                /* 1110 */  0x0A, 0x9E, 0x32, 0xB8, 0x8E, 0x26, 0xC0, 0xF7,
                /* 1118 */  0xFC, 0x0F, 0xBC, 0x0F, 0xD3, 0xFC, 0xFC, 0x0F,
                /* 1120 */  0x7C, 0xFF, 0xFF, 0x77, 0x47, 0xF0, 0x40, 0x3D,
                /* 1128 */  0x1D, 0x70, 0x98, 0x67, 0x3D, 0x76, 0xE9, 0x80,
                /* 1130 */  0x71, 0x95, 0x63, 0xD7, 0x03, 0x76, 0xE6, 0x70,
                /* 1138 */  0xA2, 0x5F, 0x9D, 0xCE, 0x1C, 0xB8, 0x14, 0x4B,
                /* 1140 */  0xD6, 0x35, 0x8C, 0x9D, 0x39, 0xC0, 0xA6, 0xF5,
                /* 1148 */  0xCA, 0x4D, 0x47, 0x6E, 0x95, 0x30, 0xD2, 0x48,
                /* 1150 */  0xA2, 0x33, 0x07, 0x57, 0x75, 0xE7, 0xA2, 0x20,
                /* 1158 */  0xBE, 0xF1, 0x39, 0xCA, 0xFD, 0x17, 0x54, 0xD7,
                /* 1160 */  0x2D, 0x60, 0x76, 0xFC, 0xC5, 0x86, 0xBA, 0xFD,
                /* 1168 */  0xA2, 0x07, 0xE6, 0x03, 0x35, 0x8C, 0x13, 0x3E,
                /* 1170 */  0x78, 0xEF, 0x09, 0x9E, 0x1A, 0xAC, 0x63, 0x10,
                /* 1178 */  0x9F, 0x1A, 0xDC, 0xFF, 0xFF, 0xD5, 0x17, 0x37,
                /* 1180 */  0x34, 0x8F, 0x1F, 0x77, 0x36, 0x01, 0xDF, 0x21,
                /* 1188 */  0x00, 0xAC, 0xB7, 0x04, 0x1F, 0x02, 0xC0, 0x76,
                /* 1190 */  0x85, 0x03, 0x16, 0xFB, 0xF6, 0x0D, 0x82, 0x47,
                /* 1198 */  0x9E, 0x3B, 0x05, 0xF1, 0xA0, 0x7C, 0x09, 0x02,
                /* 11A0 */  0x9E, 0x50, 0xBE, 0xD8, 0x00, 0xFB, 0xFF, 0xFF,
                /* 11A8 */  0xC5, 0x06, 0x4C, 0x90, 0xBE, 0xD8, 0x00, 0x4E,
                /* 11B0 */  0x2E, 0x31, 0xEC, 0x62, 0x03, 0x56, 0xD9, 0x17,
                /* 11B8 */  0x1B, 0xD4, 0x91, 0xC0, 0x62, 0x57, 0xAA, 0xCB,
                /* 11C0 */  0x0E, 0xBB, 0xB2, 0xBE, 0xA1, 0xB2, 0xD9, 0xF8,
                /* 11C8 */  0x5C, 0xED, 0x83, 0x9A, 0x47, 0xFD, 0xB6, 0xC0,
                /* 11D0 */  0x06, 0xFB, 0x08, 0x8C, 0x13, 0x75, 0xAF, 0x41,
                /* 11D8 */  0xC9, 0x81, 0x51, 0x80, 0x63, 0x04, 0x4A, 0xF2,
                /* 11E0 */  0xD5, 0x8C, 0x82, 0xF8, 0x00, 0xE0, 0x43, 0x29,
                /* 11E8 */  0xE0, 0x22, 0xC9, 0x5D, 0x85, 0xFC, 0xFF, 0xC7,
                /* 11F0 */  0x84, 0xD1, 0x72, 0x12, 0x20, 0x97, 0x3C, 0x1F,
                /* 11F8 */  0xF6, 0x0E, 0xF4, 0xC4, 0x4F, 0xEA, 0x05, 0xF8,
                /* 1200 */  0xA1, 0x9C, 0x4D, 0x0A, 0xAC, 0xC3, 0xF5, 0x31,
                /* 1208 */  0x05, 0x38, 0x1F, 0xED, 0x7D, 0x20, 0xE0, 0xF2,
                /* 1210 */  0x0F, 0x04, 0x14, 0xC4, 0x57, 0x3F, 0xE0, 0x7A,
                /* 1218 */  0x1F, 0x05, 0x67, 0x98, 0x73, 0x03, 0xFA, 0xDC,
                /* 1220 */  0xEF, 0xCB, 0x04, 0x9C, 0xC3, 0x0C, 0xB0, 0xF9,
                /* 1228 */  0xFF, 0x9F, 0xCE, 0xC1, 0x70, 0x98, 0x01, 0x1E,
                /* 1230 */  0x4F, 0x02, 0x1F, 0x66, 0xC0, 0x05, 0xEE, 0xC3,
                /* 1238 */  0x0C, 0x70, 0x15, 0x7C, 0xE9, 0x03, 0xDD, 0x41,
                /* 1240 */  0x9E, 0xA1, 0xF8, 0x62, 0xE0, 0x93, 0x0B, 0xC7,
                /* 1248 */  0x39, 0xAD, 0xA7, 0x03, 0x0E, 0x13, 0xF8, 0xED,
                /* 1250 */  0x80, 0x1D, 0x39, 0x2C, 0xFE, 0xCE, 0x87, 0x96,
                /* 1258 */  0x7B, 0x96, 0x81, 0x7C, 0xCB, 0xF1, 0x74, 0x3C,
                /* 1260 */  0x80, 0xE7, 0x05, 0xDF, 0x49, 0x70, 0x87, 0x19,
                /* 1268 */  0x60, 0xF3, 0xFF, 0x3F, 0xCC, 0x00, 0xFC, 0xFF,
                /* 1270 */  0xFF, 0x1F, 0x66, 0xB0, 0xB7, 0x09, 0x18, 0x87,
                /* 1278 */  0x19, 0xC0, 0x9C, 0x88, 0xC3, 0x0C, 0xE8, 0x4C,
                /* 1280 */  0x1C, 0x66, 0x80, 0xEE, 0x4D, 0xC3, 0x87, 0x19,
                /* 1288 */  0xE0, 0x00, 0xFD, 0x74, 0x80, 0xB9, 0xCC, 0xF8,
                /* 1290 */  0x0A, 0x82, 0xB9, 0x73, 0x98, 0x60, 0xBC, 0x77,
                /* 1298 */  0x83, 0x8E, 0x33, 0x7C, 0x28, 0xBE, 0xC6, 0x7B,
                /* 12A0 */  0x14, 0x6C, 0xFC, 0xE1, 0xFF, 0xFF, 0xF1, 0x8D,
                /* 12A8 */  0xF2, 0x00, 0x10, 0xFF, 0x7D, 0xC0, 0xA1, 0x6E,
                /* 12B0 */  0xF3, 0xA8, 0x38, 0x14, 0x3A, 0x67, 0x00, 0x0E,
                /* 12B8 */  0x6E, 0xF3, 0xE0, 0x3C, 0x67, 0xC0, 0x99, 0x2B,
                /* 12C0 */  0x8C, 0x7B, 0x3C, 0x30, 0x3C, 0x67, 0x00, 0xAF,
                /* 12C8 */  0xD0, 0x10, 0x3A, 0x67, 0x80, 0x4B, 0xC5, 0x39,
                /* 12D0 */  0x03, 0xE2, 0xFF, 0xFF, 0x9C, 0x01, 0xAC, 0x44,
                /* 12D8 */  0x9E, 0x33, 0x40, 0x77, 0x34, 0x65, 0x30, 0xEC,
                /* 12E0 */  0x62, 0xEA, 0xB9, 0x3F, 0x5F, 0x30, 0xA1, 0xA7,
                /* 12E8 */  0x2F, 0xD4, 0x10, 0x2C, 0xF5, 0x02, 0x8F, 0xB8,
                /* 12F0 */  0x23, 0xC0, 0x90, 0x77, 0xEC, 0x42, 0x09, 0x83,
                /* 12F8 */  0x91, 0xAC, 0x9B, 0x3B, 0x4A, 0xC8, 0xCD, 0x9D,
                /* 1300 */  0x82, 0xF8, 0xE6, 0x0E, 0xB0, 0xE1, 0xFF, 0x7F,
                /* 1308 */  0x73, 0x07, 0x63, 0x8E, 0x73, 0x08, 0x7A, 0x68,
                /* 1310 */  0xBE, 0x13, 0xC0, 0x38, 0xB3, 0x03, 0xB3, 0x53,
                /* 1318 */  0x08, 0xF6, 0xCC, 0x0E, 0xF0, 0xE7, 0xFF, 0x7F,
                /* 1320 */  0x88, 0x01, 0xEB, 0x38, 0x7D, 0x88, 0x01, 0x9C,
                /* 1328 */  0x9C, 0xD9, 0xF9, 0x21, 0x06, 0x5E, 0xD2, 0x75,
                /* 1330 */  0xEA, 0x10, 0xC3, 0x39, 0x9C, 0xF3, 0xA1, 0xA0,
                /* 1338 */  0xA9, 0x87, 0x3F, 0x26, 0xDF, 0x48, 0x4F, 0xB0,
                /* 1340 */  0xCF, 0x09, 0x68, 0x1C, 0xD6, 0x8C, 0xA4, 0xB3,
                /* 1348 */  0xC0, 0x31, 0x3E, 0x1D, 0x38, 0xD7, 0xF9, 0x85,
                /* 1350 */  0x9E, 0x19, 0x9C, 0x88, 0x42, 0x79, 0xCE, 0x0E,
                /* 1358 */  0xA8, 0x04, 0xA7, 0x2E, 0x0A, 0xE2, 0xE1, 0xFB,
                /* 1360 */  0x18, 0x03, 0x18, 0xFB, 0xFF, 0x1F, 0x63, 0x00,
                /* 1368 */  0x13, 0x57, 0x14, 0xC0, 0xE4, 0x9D, 0x14, 0x9C,
                /* 1370 */  0x57, 0x14, 0xE0, 0x11, 0xFC, 0x8A, 0x02, 0xBA,
                /* 1378 */  0xFF, 0xBF, 0x8D, 0x2B, 0x0A, 0xD0, 0x1D, 0xE0,
                /* 1380 */  0x2B, 0x0A, 0x58, 0x6E, 0x25, 0x7C, 0x10, 0x8F,
                /* 1388 */  0x25, 0xFC, 0xB8, 0xC9, 0xAE, 0x25, 0x98, 0x4B,
                /* 1390 */  0x0A, 0x8B, 0x7D, 0xCF, 0x44, 0x71, 0x38, 0xF4,
                /* 1398 */  0x3D, 0x13, 0x71, 0x0B, 0xE7, 0xA7, 0x16, 0x1B,
                /* 13A0 */  0x87, 0xD6, 0x14, 0x7D, 0xF9, 0x34, 0xC1, 0x90,
                /* 13A8 */  0x37, 0x4D, 0x54, 0x3C, 0x0A, 0x85, 0x3B, 0x3D,
                /* 13B0 */  0xA0, 0x6E, 0x9B, 0xBE, 0x6F, 0xF2, 0x9B, 0x26,
                /* 13B8 */  0xE0, 0x27, 0xDC, 0x35, 0x05, 0x3D, 0x0E, 0xCF,
                /* 13C0 */  0x96, 0x23, 0xBF, 0x04, 0xF8, 0x9E, 0xE2, 0xFB,
                /* 13C8 */  0x80, 0xCD, 0x43, 0x92, 0x10, 0x27, 0x15, 0x3A,
                /* 13D0 */  0x30, 0xDC, 0xFF, 0x7F, 0x60, 0xF0, 0x8F, 0x2A,
                /* 13D8 */  0x7C, 0x50, 0xBE, 0x72, 0xC2, 0xBD, 0xAA, 0x80,
                /* 13E0 */  0xEB, 0xAC, 0x01, 0xBC, 0xC7, 0xE2, 0xB3, 0x06,
                /* 13E8 */  0xE0, 0xE4, 0xA2, 0x0C, 0xE3, 0x7C, 0xE5, 0xD3,
                /* 13F0 */  0x05, 0xEE, 0xAC, 0xC1, 0x12, 0xDC, 0x39, 0x51,
                /* 13F8 */  0x1C, 0xD6, 0x7F, 0xE7, 0x44, 0x9C, 0x35, 0x60,
                /* 1400 */  0xEA, 0xBD, 0x75, 0xA2, 0x94, 0xC2, 0x48, 0xE7,
                /* 1408 */  0xAD, 0x13, 0xA5, 0x0C, 0x46, 0xFF, 0x7F, 0x38,
                /* 1410 */  0x83, 0xF8, 0xD6, 0x09, 0xF0, 0x27, 0xD8, 0xD0,
                /* 1418 */  0xD0, 0xB3, 0xF0, 0x99, 0x04, 0xE6, 0xE0, 0xC0,
                /* 1420 */  0x3B, 0x23, 0x5F, 0x3F, 0x61, 0xDE, 0xC5, 0xC0,
                /* 1428 */  0xF9, 0xFF, 0x3F, 0x7E, 0x02, 0xEC, 0xB9, 0xD0,
                /* 1430 */  0x80, 0xCF, 0xC8, 0x85, 0x06, 0x10, 0xF2, 0xFF,
                /* 1438 */  0x3F, 0x7E, 0x62, 0x2F, 0x34, 0xF0, 0x03, 0x1F,
                /* 1440 */  0x40, 0x51, 0xA2, 0x20, 0x14, 0xF3, 0xA9, 0xA0,
                /* 1448 */  0xFB, 0x0D, 0x9B, 0x86, 0xB5, 0x0F, 0x42, 0xB0,
                /* 1450 */  0x9E, 0xCD, 0xB3, 0x86, 0xEF, 0x34, 0x3E, 0x8F,
                /* 1458 */  0x7A, 0x4E, 0x8C, 0x60, 0xA4, 0x23, 0x28, 0x2A,
                /* 1460 */  0x0C, 0x85, 0xC2, 0x1F, 0x07, 0x28, 0x9C, 0xE3,
                /* 1468 */  0x9E, 0x1F, 0x28, 0x88, 0x01, 0x9D, 0xE5, 0xFC,
                /* 1470 */  0x80, 0x3E, 0x6D, 0x78, 0x22, 0xB8, 0x33, 0xC1,
                /* 1478 */  0x1B, 0xC8, 0x01, 0x06, 0x79, 0x62, 0x60, 0x67,
                /* 1480 */  0x1A, 0x60, 0x78, 0x7C, 0x60, 0xA7, 0x0F, 0x60,
                /* 1488 */  0x71, 0x8D, 0xF3, 0x70, 0x79, 0x80, 0xBB, 0x1C,
                /* 1490 */  0x05, 0xF1, 0x5D, 0x0E, 0xB8, 0x8E, 0xC6, 0xA7,
                /* 1498 */  0x0F, 0xF6, 0xFF, 0x3F, 0x7D, 0x80, 0x69, 0x5C,
                /* 14A0 */  0x70, 0x4E, 0x05, 0xB8, 0xBB, 0x02, 0xEE, 0xFE,
                /* 14A8 */  0x09, 0x78, 0x5B, 0xB6, 0x0F, 0x29, 0xE0, 0xBA,
                /* 14B0 */  0x53, 0xF9, 0x90, 0x02, 0x5C, 0x05, 0x5F, 0xE2,
                /* 14B8 */  0x40, 0x77, 0x76, 0xF0, 0xC1, 0x80, 0xDF, 0xBA,
                /* 14C0 */  0x0D, 0xF7, 0x12, 0x6A, 0xD4, 0x07, 0x13, 0x76,
                /* 14C8 */  0x53, 0xF1, 0xFF, 0xFF, 0x74, 0xC0, 0x0F, 0x2A,
                /* 14D0 */  0x2C, 0xD1, 0x7A, 0x75, 0x50, 0xC1, 0xE5, 0x78,
                /* 14D8 */  0x59, 0xE9, 0xDC, 0xC2, 0x0E, 0x2A, 0x60, 0xD0,
                /* 14E0 */  0x0C, 0xAB, 0x83, 0x0A, 0x57, 0x0B, 0x23, 0xAD,
                /* 14E8 */  0x0F, 0x00, 0x1D, 0x35, 0xB8, 0xBA, 0x1B, 0x1D,
                /* 14F0 */  0x05, 0xF1, 0x85, 0xC4, 0x57, 0x39, 0x80, 0x3B,
                /* 14F8 */  0x39, 0xC6, 0x8F, 0x86, 0xF1, 0xC9, 0xC5, 0x97,
                /* 1500 */  0x23, 0x8F, 0xEC, 0xC9, 0xE0, 0x5D, 0x82, 0xCD,
                /* 1508 */  0x1E, 0x3C, 0xFF, 0xFF, 0x1B, 0x1C, 0x8C, 0xD9,
                /* 1510 */  0x83, 0xED, 0x6A, 0x04, 0x1C, 0x91, 0x7C, 0x35,
                /* 1518 */  0x02, 0xDB, 0x41, 0xC2, 0x67, 0x1B, 0xF0, 0x8C,
                /* 1520 */  0x0A, 0xAC, 0x27, 0x06, 0xDF, 0x9F, 0x80, 0xF3,
                /* 1528 */  0x65, 0x10, 0xF8, 0xFC, 0xFF, 0x2F, 0x46, 0xE0,
                /* 1530 */  0xBC, 0xF8, 0xF8, 0x62, 0x04, 0x78, 0x1A, 0xB4,
                /* 1538 */  0x2F, 0x46, 0x80, 0x93, 0xCB, 0x20, 0xBF, 0x18,
                /* 1540 */  0x81, 0x2F, 0xD0, 0x61, 0x1F, 0x75, 0x04, 0x70,
                /* 1548 */  0xB0, 0xC3, 0x3E, 0xC2, 0x2A, 0x82, 0x2E, 0x06,
                /* 1550 */  0x2C, 0xD0, 0x41, 0x1F, 0x15, 0x85, 0x42, 0x41,
                /* 1558 */  0x4E, 0x0F, 0x28, 0xE9, 0x70, 0x14, 0xC4, 0x07,
                /* 1560 */  0x00, 0xFF, 0xFF, 0x0F, 0xFA, 0x80, 0x9B, 0x20,
                /* 1568 */  0xC0, 0xA8, 0x71, 0xF9, 0x30, 0xE0, 0x99, 0x62,
                /* 1570 */  0x2E, 0x7C, 0xC0, 0xF0, 0x3C, 0xE0, 0xE3, 0x81,
                /* 1578 */  0x47, 0xD5, 0xF3, 0x09, 0x03, 0xC8, 0xDC, 0x34,
                /* 1580 */  0x7D, 0xC2, 0x00, 0x97, 0x94, 0x13, 0x06, 0x50,
                /* 1588 */  0xFB, 0xFF, 0x9F, 0x30, 0xE0, 0xC8, 0xBB, 0xC9,
                /* 1590 */  0x81, 0xEE, 0x54, 0xC0, 0x2F, 0x16, 0x96, 0x76,
                /* 1598 */  0xB2, 0x47, 0x8D, 0xDC, 0x12, 0x4F, 0xF6, 0x88,
                /* 15A0 */  0xEB, 0x01, 0x46, 0xDA, 0xA9, 0x1E, 0x25, 0x0A,
                /* 15A8 */  0x46, 0x92, 0x4E, 0xF5, 0x28, 0x11, 0x37, 0x57,
                /* 15B0 */  0x0A, 0xE2, 0x53, 0x3D, 0xC0, 0x9F, 0x0C, 0x07,
                /* 15B8 */  0x10, 0xB4, 0x8A, 0x03, 0x08, 0x72, 0xEE, 0xEC,
                /* 15C0 */  0xFF, 0x7F, 0x71, 0x03, 0x4E, 0xC7, 0x0F, 0xEC,
                /* 15C8 */  0x55, 0x1E, 0x60, 0xD1, 0xE9, 0x05, 0x7C, 0x56,
                /* 15D0 */  0x4E, 0x2F, 0xA0, 0xF9, 0xFF, 0x9F, 0x5E, 0x80,
                /* 15D8 */  0xEF, 0x71, 0x8B, 0x9F, 0x5E, 0x70, 0x51, 0x4F,
                /* 15E0 */  0x59, 0x28, 0x0E, 0x07, 0x3D, 0x65, 0x21, 0x70,
                /* 15E8 */  0x3D, 0x01, 0x4F, 0xE9, 0xEC, 0xEA, 0x3C, 0x07,
                /* 15F0 */  0x68, 0x78, 0x2F, 0xF6, 0x91, 0x7C, 0xDC, 0x62,
                /* 15F8 */  0x27, 0x2D, 0x1E, 0x89, 0x42, 0xA7, 0x2D, 0x1F,
                /* 1600 */  0x1C, 0x78, 0x04, 0x38, 0x0A, 0xE2, 0x93, 0x16,
                /* 1608 */  0xE0, 0x27, 0xD0, 0xC9, 0x04, 0x3D, 0x0E, 0xCF,
                /* 1610 */  0x16, 0xE6, 0x69, 0x0B, 0x18, 0xFD, 0xFF, 0x4F,
                /* 1618 */  0x5B, 0xC0, 0x33, 0xF8, 0x01, 0x03, 0x74, 0x5A,
                /* 1620 */  0x0E, 0x18, 0x40, 0x77, 0x80, 0x4F, 0x5B, 0x60,
                /* 1628 */  0x3B, 0x19, 0xE0, 0x70, 0xDE, 0x0C, 0x70, 0x47,
                /* 1630 */  0x43, 0x26, 0xFA, 0xC8, 0x85, 0xE2, 0xB0, 0xE4,
                /* 1638 */  0x23, 0x17, 0xE2, 0x9E, 0x00, 0xF3, 0xEC, 0xE5,
                /* 1640 */  0x63, 0x17, 0x17, 0x07, 0x23, 0x69, 0xC7, 0x2E,
                /* 1648 */  0x94, 0x98, 0x63, 0x17, 0x05, 0xF1, 0xB1, 0x0B,
                /* 1650 */  0xB8, 0xFC, 0xFF, 0x8F, 0x5D, 0x80, 0xF3, 0xD3,
                /* 1658 */  0xB5, 0x4F, 0x23, 0xB8, 0x59, 0xF8, 0x56, 0x00,
                /* 1660 */  0xF3, 0xE8, 0x05, 0xD8, 0xFD, 0xFF, 0x1F, 0xBD,
                /* 1668 */  0x00, 0x9F, 0x47, 0x19, 0xF0, 0x79, 0x39, 0xCA,
                /* 1670 */  0x00, 0x5A, 0x8E, 0x5E, 0xFC, 0x28, 0x03, 0x3F,
                /* 1678 */  0x81, 0x8D, 0x31, 0xB0, 0x18, 0x4F, 0x05, 0x09,
                /* 1680 */  0x5C, 0x2C, 0x85, 0xF1, 0x95, 0xC2, 0xE7, 0x03,
                /* 1688 */  0xFC, 0x88, 0x0F, 0xF8, 0x38, 0x0F, 0x89, 0x49,
                /* 1690 */  0x82, 0xA3, 0xFF, 0xFF, 0xA3, 0x29, 0x42, 0x80,
                /* 1698 */  0xF9, 0xE1, 0x68, 0x26, 0x67, 0xEE, 0x39, 0x85,
                /* 16A0 */  0x64, 0xD2, 0xC6, 0x86, 0x3A, 0xD1, 0x7A, 0x7C,
                /* 16A8 */  0x67, 0x73, 0x5E, 0xEF, 0xD6, 0xBE, 0x39, 0xF8,
                /* 16B0 */  0x50, 0xC5, 0x8E, 0x01, 0x0C, 0x8D, 0x43, 0x63,
                /* 16B8 */  0x87, 0xE1, 0xFB, 0x41, 0xB0, 0x83, 0x38, 0x3F,
                /* 16C0 */  0x1F, 0x23, 0xD8, 0x84, 0x4E, 0xB2, 0xDC, 0x7B,
                /* 16C8 */  0x83, 0xC4, 0xA3, 0x0A, 0xA3, 0xB9, 0xB3, 0x04,
                /* 16D0 */  0x62, 0xD4, 0xE0, 0x38, 0x33, 0x9C, 0xC1, 0x3B,
                /* 16D8 */  0x0C, 0x9B, 0xF2, 0x21, 0xC7, 0x78, 0x2B, 0x30,
                /* 16E0 */  0x4A, 0xC0, 0x78, 0x31, 0x0E, 0xC5, 0x47, 0x10,
                /* 16E8 */  0xA3, 0xBC, 0x34, 0x84, 0x8B, 0xF2, 0x94, 0x10,
                /* 16F0 */  0xA5, 0xD6, 0x99, 0x11, 0xD0, 0x03, 0x60, 0x40,
                /* 16F8 */  0xAF, 0x12, 0x47, 0xFF, 0xC0, 0xE2, 0x19, 0x1C,
                /* 1700 */  0x0C, 0xE6, 0x64, 0x60, 0xEC, 0x77, 0x0A, 0x9F,
                /* 1708 */  0x10, 0x98, 0x7B, 0x01, 0xDE, 0x66, 0x25, 0x88,
                /* 1710 */  0x08, 0x71, 0xDF, 0x23, 0x4E, 0xE6, 0x31, 0xA7,
                /* 1718 */  0xAD, 0xA1, 0x69, 0x6C, 0x15, 0x9E, 0x74, 0x84,
                /* 1720 */  0x12, 0xE4, 0x79, 0xA0, 0x66, 0x54, 0xA1, 0x1C,
                /* 1728 */  0x42, 0x98, 0xE7, 0x8B, 0x80, 0x51, 0x22, 0x46,
                /* 1730 */  0x8B, 0x1A, 0xB8, 0x46, 0x6C, 0x02, 0x1A, 0x28,
                /* 1738 */  0x56, 0x84, 0x23, 0x68, 0x7F, 0x10, 0x24, 0xDA,
                /* 1740 */  0x99, 0x40, 0x77, 0x1D, 0x47, 0x3A, 0xAA, 0x41,
                /* 1748 */  0x39, 0x13, 0x9C, 0xD5, 0x83, 0x3A, 0x03, 0x79,
                /* 1750 */  0x60, 0xF7, 0x3D, 0xE1, 0x81, 0xC0, 0x43, 0x67,
                /* 1758 */  0x27, 0x11, 0x1F, 0x48, 0xE0, 0xB8, 0x06, 0xD4,
                /* 1760 */  0xD5, 0xE0, 0x99, 0x02, 0x2C, 0x67, 0x35, 0x70,
                /* 1768 */  0xFC, 0xFF, 0xCF, 0x6A, 0x38, 0xF9, 0x83, 0x40,
                /* 1770 */  0x8D, 0xCC, 0xD0, 0xBE, 0x8A, 0x9C, 0xD6, 0x0B,
                /* 1778 */  0x81, 0xCF, 0x09, 0x87, 0xC5, 0xAE, 0x44, 0x3E,
                /* 1780 */  0xC3, 0x78, 0x3C, 0xE0, 0x3F, 0x02, 0x3C, 0x15,
                /* 1788 */  0x44, 0x78, 0x6B, 0xF0, 0x7C, 0x7D, 0x5A, 0xF0,
                /* 1790 */  0x81, 0x05, 0x0C, 0x27, 0x05, 0x7E, 0x51, 0x60,
                /* 1798 */  0x87, 0x81, 0x18, 0x9E, 0x17, 0x3B, 0x38, 0x30,
                /* 17A0 */  0x91, 0x47, 0x08, 0xF4, 0x08, 0xF8, 0x31, 0xE0,
                /* 17A8 */  0xE1, 0x85, 0x8D, 0xE0, 0xFD, 0xC5, 0x93, 0x38,
                /* 17B0 */  0x20, 0x1F, 0x2E, 0x8C, 0x10, 0xFE, 0x99, 0xE2,
                /* 17B8 */  0x19, 0xC3, 0xA7, 0x84, 0x33, 0x3A, 0x87, 0x73,
                /* 17C0 */  0x7A, 0x1B, 0xF0, 0xF1, 0x48, 0x4F, 0x5F, 0x9D,
                /* 17C8 */  0x07, 0x1C, 0x91, 0x42, 0x27, 0x34, 0x5C, 0xAC,
                /* 17D0 */  0xE5, 0xEA, 0x58, 0xC2, 0xA6, 0x84, 0x3D, 0x69,
                /* 17D8 */  0x79, 0x10, 0x21, 0x9E, 0x47, 0xC8, 0xD1, 0x8C,
                /* 17E0 */  0x8E, 0xDC, 0x01, 0x28, 0x14, 0xE0, 0x50, 0x84,
                /* 17E8 */  0x92, 0x7C, 0xAC, 0xA4, 0x20, 0x1E, 0x88, 0x8F,
                /* 17F0 */  0x54, 0x36, 0x72, 0x6A, 0x40, 0xCF, 0x12, 0x7F,
                /* 17F8 */  0x72, 0xF0, 0xC4, 0x7C, 0xF8, 0x48, 0x70, 0x66,
                /* 1800 */  0x8F, 0x68, 0xE0, 0xBD, 0x77, 0xC1, 0xFC, 0xFF,
                /* 1808 */  0xDF, 0xBB, 0x60, 0x84, 0x98, 0x15, 0x5A, 0xC7,
                /* 1810 */  0x75, 0x85, 0xDC, 0x68, 0xD8, 0xF1, 0xC7, 0x43,
                /* 1818 */  0x02, 0xEF, 0xCD, 0x0C, 0x7C, 0x87, 0x2E, 0x60,
                /* 1820 */  0x11, 0x1F, 0x9D, 0xC2, 0x38, 0xF0, 0x8C, 0x28,
                /* 1828 */  0x88, 0x0F, 0x06, 0x0E, 0x73, 0x02, 0x44, 0x9F,
                /* 1830 */  0x74, 0x3C, 0x80, 0x43, 0x7D, 0x6E, 0x30, 0xC4,
                /* 1838 */  0x3B, 0x17, 0xE6, 0xCC, 0x05, 0xEE, 0xA1, 0xF8,
                /* 1840 */  0xCC, 0x05, 0x9E, 0x1B, 0x20, 0x3B, 0x73, 0x01,
                /* 1848 */  0x13, 0x09, 0x6B, 0xD5, 0x99, 0x0B, 0xFE, 0xFF,
                /* 1850 */  0xFF, 0xCC, 0x85, 0xBB, 0x18, 0xF0, 0x33, 0x17,
                /* 1858 */  0xF0, 0x44, 0xF5, 0x71, 0x09, 0x1C, 0xE7, 0x24,
                /* 1860 */  0x3C, 0xC8, 0xCB, 0x08, 0x3F, 0x24, 0x85, 0x61,
                /* 1868 */  0xA7, 0x26, 0x76, 0x65, 0x62, 0x17, 0xA2, 0xA3,
                /* 1870 */  0xEB, 0x73, 0xCA, 0x3A, 0x78, 0xB1, 0x53, 0x97,
                /* 1878 */  0x4F, 0x28, 0xFC, 0xB4, 0x65, 0x51, 0x27, 0x14,
                /* 1880 */  0xC4, 0x55, 0x04, 0xEE, 0xF8, 0x75, 0x44, 0x41,
                /* 1888 */  0x85, 0x27, 0x51, 0xF8, 0x23, 0x04, 0xEA, 0x4C,
                /* 1890 */  0x6E, 0x38, 0x83, 0x18, 0xD0, 0x47, 0x14, 0xC0,
                /* 1898 */  0xCA, 0x01, 0x04, 0x2C, 0xFF, 0xFF, 0x03, 0x08,
                /* 18A0 */  0xE0, 0xE7, 0x74, 0x0D, 0x8E, 0x03, 0x08, 0xE0,
                /* 18A8 */  0x61, 0xD4, 0x3E, 0x80, 0x00, 0xBE, 0xFE, 0xFF,
                /* 18B0 */  0x07, 0x10, 0xF8, 0x8A, 0x0E, 0x20, 0xA8, 0x83,
                /* 18B8 */  0x82, 0x55, 0x1C, 0x40, 0x10, 0xA7, 0x26, 0x6C,
                /* 18C0 */  0xF6, 0x73, 0x16, 0x1D, 0xB1, 0x53, 0x93, 0x28,
                /* 18C8 */  0xF5, 0xF1, 0x01, 0x95, 0xF3, 0x88, 0x40, 0x41,
                /* 18D0 */  0x0C, 0xE8, 0x8B, 0x14, 0xF0, 0xBA, 0x78, 0x00,
                /* 18D8 */  0x9C, 0xF9, 0xFF, 0x5F, 0x3C, 0x80, 0x2D, 0xA4,
                /* 18E0 */  0x2F, 0x1E, 0x80, 0xCF, 0x60, 0x0F, 0x0A, 0xDF,
                /* 18E8 */  0x86, 0xA9, 0xC4, 0x0B, 0x31, 0x20, 0xEC, 0xFF,
                /* 18F0 */  0x7F, 0x21, 0x06, 0x26, 0xB3, 0x78, 0xE8, 0x7D,
                /* 18F8 */  0x00, 0x30, 0xBA, 0x6F, 0xD6, 0x06, 0x79, 0x22,
                /* 1900 */  0x86, 0x73, 0xA1, 0x48, 0xE0, 0x0B, 0x31, 0xFC,
                /* 1908 */  0x23, 0xB0, 0xC7, 0x75, 0x2E, 0x27, 0xF1, 0x3C,
                /* 1910 */  0x11, 0xE6, 0x49, 0xF8, 0x39, 0xD8, 0xE8, 0x67,
                /* 1918 */  0xF5, 0x42, 0x6C, 0xA8, 0xC3, 0x7A, 0x7F, 0x8D,
                /* 1920 */  0x12, 0x31, 0x54, 0x9C, 0x03, 0x8C, 0x12, 0x22,
                /* 1928 */  0x5C, 0xD8, 0x40, 0x31, 0x23, 0xB4, 0x86, 0x29,
                /* 1930 */  0x84, 0x38, 0x41, 0x7D, 0x21, 0x66, 0xE1, 0x2E,
                /* 1938 */  0xC4, 0x00, 0x39, 0xFE, 0xFF, 0x17, 0x62, 0xCC,
                /* 1940 */  0xFD, 0x17, 0x77, 0x6A, 0x81, 0x77, 0x52, 0xF0,
                /* 1948 */  0x45, 0x01, 0x77, 0x22, 0x86, 0x71, 0x23, 0x06,
                /* 1950 */  0x26, 0x62, 0xDF, 0x03, 0x3A, 0xE7, 0x58, 0xE8,
                /* 1958 */  0x8D, 0x18, 0x2D, 0x6B, 0xBD, 0xF2, 0x78, 0x8D,
                /* 1960 */  0x21, 0x73, 0xC2, 0x8F, 0xF3, 0x8C, 0xDE, 0x0F,
                /* 1968 */  0x98, 0x8C, 0xFB, 0x21, 0x8A, 0xC2, 0xF7, 0x43,
                /* 1970 */  0xF0, 0x5D, 0x20, 0x4E, 0xE2, 0x7D, 0xC5, 0xF7,
                /* 1978 */  0x43, 0xC0, 0xDF, 0xC1, 0xC8, 0xC3, 0xE5, 0xA1,
                /* 1980 */  0x87, 0x4B, 0x41, 0x3C, 0x5C, 0x07, 0x3A, 0x57,
                /* 1988 */  0x91, 0xFF, 0xFF, 0x70, 0x61, 0x5F, 0x02, 0x30,
                /* 1990 */  0x27, 0x2B, 0xC0, 0x9C, 0x90, 0x1B, 0x2F, 0xA0,
                /* 1998 */  0xE7, 0x3C, 0x04, 0x9E, 0x21, 0xBC, 0x6D, 0xB0,
                /* 19A0 */  0xAB, 0x10, 0x1C, 0x9C, 0x57, 0x03, 0x8E, 0xF2,
                /* 19A8 */  0x72, 0x05, 0x5F, 0xA1, 0x4D, 0x9F, 0x1A, 0x8D,
                /* 19B0 */  0x5A, 0x35, 0x28, 0x53, 0xA3, 0x4C, 0x83, 0x5A,
                /* 19B8 */  0x7D, 0x2A, 0xFD, 0xFF, 0x1B, 0x23, 0xB8, 0x58,
                /* 19C0 */  0x09, 0x5A, 0xB6, 0xC6, 0xED, 0x38, 0x20, 0x34,
                /* 19C8 */  0xF8, 0xE3, 0x47, 0x20, 0x0E, 0xBF, 0x2C, 0x81,
                /* 19D0 */  0x58, 0xBA, 0x09, 0x10, 0x16, 0xF2, 0xDA, 0x4F,
                /* 19D8 */  0x83, 0xDA, 0x00, 0x61, 0x32, 0xBF, 0x87, 0x02,
                /* 19E0 */  0x71, 0x24, 0x1F, 0x27, 0x10, 0x96, 0x0F, 0x44,
                /* 19E8 */  0x40, 0x4E, 0xF3, 0x38, 0x10, 0x90, 0xB3, 0x81,
                /* 19F0 */  0x08, 0xC8, 0xA9, 0x9F, 0x12, 0x02, 0xB2, 0x04,
                /* 19F8 */  0x27, 0x40, 0x2C, 0x30, 0x88, 0x80, 0x1C, 0x1F,
                /* 1A00 */  0x88, 0x06, 0xF3, 0x72, 0x6E, 0xA3, 0x0B, 0x16,
                /* 1A08 */  0x88, 0x83, 0x98, 0x01, 0x64, 0xA9, 0x40, 0x04,
                /* 1A10 */  0x64, 0x41, 0xAF, 0x10, 0x01, 0x59, 0x1D, 0x88,
                /* 1A18 */  0x80, 0x1C, 0x0B, 0x88, 0x66, 0x04, 0xA2, 0xDA,
                /* 1A20 */  0xDC, 0x00, 0x31, 0xA1, 0x20, 0x02, 0x72, 0x5E,
                /* 1A28 */  0x20, 0x1A, 0x1E, 0x88, 0x66, 0x7D, 0x56, 0x08,
                /* 1A30 */  0xC8, 0xC9, 0x41, 0x04, 0x64, 0x5D, 0x7E, 0x80,
                /* 1A38 */  0x98, 0x48, 0x10, 0x01, 0x39, 0x1F, 0x10, 0x0D,
                /* 1A40 */  0x0B, 0x44, 0x55, 0xBE, 0x0E, 0x04, 0x64, 0xC9,
                /* 1A48 */  0x20, 0x02, 0x72, 0x52, 0x20, 0x1A, 0x1B, 0x88,
                /* 1A50 */  0x8A, 0x37, 0x04, 0xC4, 0x92, 0x80, 0x08, 0xC8,
                /* 1A58 */  0xC2, 0x15, 0x01, 0xB1, 0x18, 0x20, 0x02, 0xB2,
                /* 1A60 */  0x04, 0x47, 0x40, 0x4C, 0x10, 0x88, 0x06, 0x4A,
                /* 1A68 */  0x80, 0x68, 0x4C, 0x20, 0x1A, 0xC4, 0x13, 0x08,
                /* 1A70 */  0x93, 0x21, 0x0A, 0x84, 0x45, 0x31, 0x05, 0xC8,
                /* 1A78 */  0x72, 0x81, 0x08, 0xC8, 0x9A, 0x54, 0x01, 0x31,
                /* 1A80 */  0x81, 0x20, 0x3A, 0xCB, 0x10, 0x57, 0x40, 0x4C,
                /* 1A88 */  0x1A, 0x88, 0x80, 0x1C, 0xF6, 0x89, 0x20, 0x10,
                /* 1A90 */  0x4B, 0xF5, 0x05, 0xC2, 0x02, 0xBE, 0x43, 0x04,
                /* 1A98 */  0xE8, 0xB4, 0x20, 0x02, 0xB2, 0xEA, 0x9F, 0x98,
                /* 1AA0 */  0x80, 0x1C, 0x01, 0x44, 0x40, 0x8E, 0x0E, 0x44,
                /* 1AA8 */  0x75, 0x28, 0x03, 0x62, 0xB9, 0x41, 0x04, 0x64,
                /* 1AB0 */  0x15, 0xCE, 0xFE, 0xFF, 0x87, 0x03, 0x0A, 0xA2,
                /* 1AB8 */  0xC3, 0x01, 0x01, 0xA2, 0x81, 0x7F, 0x60, 0x81,
                /* 1AC0 */  0x48, 0x7A, 0x10, 0x0D, 0x8E, 0x7C, 0x4A, 0x74,
                /* 1AC8 */  0x28, 0x20, 0x20, 0x02, 0xB2, 0xA8, 0xEF, 0x58,
                /* 1AD0 */  0x20, 0xA2, 0x10, 0x44, 0x83, 0x22, 0x40, 0x34,
                /* 1AD8 */  0x39, 0x10, 0x55, 0xFC, 0xC1, 0x11, 0x90, 0xE5,
                /* 1AE0 */  0x83, 0x08, 0xC8, 0x72, 0x7F, 0x72, 0x02, 0xB2,
                /* 1AE8 */  0x78, 0x10, 0x01, 0x39, 0x90, 0x3B, 0x20, 0x96,
                /* 1AF0 */  0x0E, 0x44, 0x87, 0x01, 0x22, 0xEF, 0x30, 0x40,
                /* 1AF8 */  0x41, 0x34, 0x20, 0x02, 0x44, 0xD3, 0x03, 0xD1,
                /* 1B00 */  0xB4, 0xF6, 0x80, 0x58, 0x76, 0x10, 0x01, 0x59,
                /* 1B08 */  0xF7, 0xBF, 0x47, 0x40, 0x4E, 0x01, 0x22, 0x20,
                /* 1B10 */  0xAB, 0xF1, 0x07, 0xC4, 0xB4, 0x81, 0x08, 0xC8,
                /* 1B18 */  0x29, 0x81, 0x68, 0x66, 0x20, 0x9A, 0xFD, 0xDF,
                /* 1B20 */  0x12, 0x88, 0x08, 0x79, 0x72, 0x1C, 0x10, 0x03,
                /* 1B28 */  0xD1, 0x80, 0x08, 0x10, 0x15, 0xF7, 0x8A, 0x09,
                /* 1B30 */  0x44, 0x94, 0x82, 0x08, 0xC8, 0x11, 0x81, 0x68,
                /* 1B38 */  0x5E, 0x20, 0xAA, 0xF9, 0x87, 0x23, 0x20, 0x07,
                /* 1B40 */  0x00, 0x11, 0x90, 0xF5, 0x3E, 0x6E, 0x04, 0x64,
                /* 1B48 */  0xF5, 0x20, 0x02, 0x72, 0x8A, 0x6F, 0x49, 0x20,
                /* 1B50 */  0x12, 0x09, 0x44, 0x40, 0x56, 0xF7, 0xE2, 0x12,
                /* 1B58 */  0x90, 0xA5, 0x82, 0x08, 0xC8, 0x31, 0x81, 0x68,
                /* 1B60 */  0x66, 0x20, 0x2A, 0xF6, 0xC5, 0x28, 0x20, 0x2B,
                /* 1B68 */  0x07, 0x11, 0x90, 0x15, 0xA8, 0x04, 0x62, 0x72,
                /* 1B70 */  0x40, 0x04, 0xE4, 0xF4, 0x40, 0x54, 0x8B, 0xCB,
                /* 1B78 */  0x41, 0xD0, 0x9F, 0xCD, 0x41, 0x30, 0x10, 0x1D,
                /* 1B80 */  0x49, 0x08, 0x10, 0x4D, 0x0C, 0x44, 0xA5, 0xBE,
                /* 1B88 */  0xC3, 0x02, 0x11, 0xDD, 0x20, 0x02, 0x72, 0x62,
                /* 1B90 */  0x20, 0x1A, 0x1F, 0x88, 0xEA, 0x7E, 0xAF, 0x04,
                /* 1B98 */  0x22, 0x21, 0x40, 0x34, 0x10, 0x02, 0x44, 0xA5,
                /* 1BA0 */  0x08, 0xFD, 0xFF, 0x03, 0xB1, 0x44, 0x20, 0x02,
                /* 1BA8 */  0x72, 0x3C, 0x20, 0x9A, 0xC6, 0xE8, 0xA1, 0x81,
                /* 1BB0 */  0x82, 0x08, 0xC8, 0x91, 0x3F, 0x41, 0x02, 0x72,
                /* 1BB8 */  0x7E, 0x10, 0x0D, 0x82, 0xFC, 0x65, 0x0E, 0x82,
                /* 1BC0 */  0x81, 0x68, 0xE0, 0xC4, 0x2A, 0x10, 0x4B, 0x00,
                /* 1BC8 */  0x22, 0x20, 0x6B, 0xF9, 0x2D, 0x06, 0x22, 0xCA,
                /* 1BD0 */  0x40, 0x04, 0x64, 0xC1, 0xAF, 0x3B, 0x0D, 0x9E,
                /* 1BD8 */  0x80, 0x08, 0xC8, 0xB1, 0x81, 0xA8, 0x86, 0xF7,
                /* 1BE0 */  0xD2, 0x81, 0x30, 0x10, 0x9D, 0xC8, 0x88, 0xDA,
                /* 1BE8 */  0xC3, 0x0C, 0x05, 0x11, 0x90, 0x83, 0x00, 0x51,
                /* 1BF0 */  0x19, 0x6E, 0x81, 0x98, 0x28, 0x10, 0x01, 0x59,
                /* 1BF8 */  0xA8, 0x5D, 0x20, 0xA6, 0x1A, 0x44, 0x87, 0x07,
                /* 1C00 */  0x02, 0x44, 0xD3, 0x03, 0xD1, 0xB0, 0x7A, 0x81,
                /* 1C08 */  0x58, 0x74, 0x10, 0x01, 0x39, 0xC6, 0xCF, 0x29,
                /* 1C10 */  0x10, 0x09, 0x05, 0xA2, 0x03, 0x00, 0xF9, 0xF7,
                /* 1C18 */  0x3C, 0x00, 0x30, 0x10, 0x1D, 0x00, 0xC8, 0x9B,
                /* 1C20 */  0xEF, 0x01, 0x80, 0x81, 0xE8, 0x50, 0x40, 0x1E,
                /* 1C28 */  0xA4, 0x3A, 0x14, 0x10, 0x10, 0x0D, 0x9E, 0x00,
                /* 1C30 */  0x51, 0x2D, 0xBF, 0x24, 0x01, 0x39, 0x09, 0x88,
                /* 1C38 */  0x0E, 0x27, 0x04, 0x88, 0xAA, 0x7C, 0x23, 0x09,
                /* 1C40 */  0xC8, 0x9A, 0x41, 0x74, 0x20, 0x20, 0x40, 0x34,
                /* 1C48 */  0x3F, 0x10, 0x4D, 0xF3, 0x7A, 0xD3, 0x21, 0x80,
                /* 1C50 */  0x80, 0x08, 0xC8, 0x3A, 0x1F, 0x53, 0x8F, 0x52,
                /* 1C58 */  0x44, 0x9F, 0x6A, 0x20, 0x96, 0x0E, 0x84, 0x2A,
                /* 1C60 */  0x7A, 0x76, 0x0A, 0xD4, 0xF2, 0x40, 0x74, 0x16,
                /* 1C68 */  0x23, 0x9F, 0xA4, 0x40, 0x44, 0x1C, 0x88, 0x8E,
                /* 1C70 */  0x2A, 0x04, 0x88, 0xC6, 0x05, 0xA2, 0x52, 0xDE,
                /* 1C78 */  0x4F, 0x02, 0xB2, 0x30, 0x10, 0x1D, 0x2F, 0x08,
                /* 1C80 */  0x10, 0x0D, 0x0C, 0x44, 0xE5, 0x7C, 0x98, 0x1E,
                /* 1C88 */  0x3B, 0x18, 0x88, 0x80, 0x9C, 0x11, 0x88, 0x06,
                /* 1C90 */  0x06, 0xA2, 0xB2, 0xA5, 0xFF, 0xFF, 0x81, 0x58,
                /* 1C98 */  0x06, 0x10, 0x1D, 0x11, 0xC8, 0x1F, 0xEA, 0x11,
                /* 1CA0 */  0x81, 0x81, 0x08, 0xC8, 0xC9, 0xDE, 0x56, 0x8F,
                /* 1CA8 */  0x37, 0x0C, 0x44, 0x40, 0x96, 0xF8, 0xE0, 0x13,
                /* 1CB0 */  0x90, 0xF5, 0x82, 0x08, 0xC8, 0xFA, 0x9E, 0x9C,
                /* 1CB8 */  0x02, 0xB2, 0x5A, 0x10, 0x1D, 0x85, 0x08, 0x10,
                /* 1CC0 */  0x4D, 0x0E, 0x44, 0x15, 0x3D, 0x32, 0x35, 0x48,
                /* 1CC8 */  0x02, 0x22, 0x20, 0x47, 0x03, 0xA2, 0x39, 0x81,
                /* 1CD0 */  0x68, 0xAE, 0x8F, 0xA9, 0x80, 0x9C, 0x12, 0x44,
                /* 1CD8 */  0x40, 0xD6, 0xA8, 0x1F, 0x88, 0x29, 0x06, 0xD1,
                /* 1CE0 */  0x31, 0x84, 0x04, 0x00, 0x62, 0x99, 0x40, 0x34,
                /* 1CE8 */  0x08, 0x52, 0x00, 0x88, 0xE9, 0x03, 0x11, 0x90,
                /* 1CF0 */  0x15, 0x36, 0x00, 0x62, 0x72, 0x41, 0x74, 0x8C,
                /* 1CF8 */  0x20, 0x40, 0x54, 0x43, 0x84, 0xA3, 0x11, 0x05,
                /* 1D00 */  0xD1, 0xD1, 0x88, 0x00, 0x51, 0xE5, 0x15, 0x80,
                /* 1D08 */  0x58, 0x0E, 0x10, 0x1D, 0x0B, 0x48, 0x07, 0x20,
                /* 1D10 */  0x16, 0x0D, 0x44, 0x03, 0x25, 0xDF, 0x7A, 0x0D,
                /* 1D18 */  0x94, 0x80, 0x08, 0xC8, 0xF2, 0x4A, 0x00, 0x31,
                /* 1D20 */  0xB1, 0x20, 0x3A, 0x2A, 0x91, 0x16, 0x47, 0x25,
                /* 1D28 */  0x0A, 0xA2, 0xC3, 0x15, 0x89, 0x71, 0x84, 0xA2,
                /* 1D30 */  0x20, 0x3A, 0xA6, 0x90, 0x1C, 0xC7, 0x14, 0x0A,
                /* 1D38 */  0xA2, 0x23, 0x04, 0xE9, 0x71, 0x84, 0xA0, 0x20,
                /* 1D40 */  0x3A, 0x04, 0x10, 0x20, 0x1A, 0x13, 0x88, 0xA6,
                /* 1D48 */  0x0A, 0x72, 0xC4, 0xA2, 0x20, 0x3A, 0x72, 0x90,
                /* 1D50 */  0x24, 0xC7, 0x07, 0x0A, 0xA2, 0x23, 0x16, 0x69,
                /* 1D58 */  0x72, 0xCC, 0xA0, 0x20, 0x02, 0xB2, 0xFA, 0x28,
                /* 1D60 */  0x40, 0x2C, 0x0B, 0x88, 0x80, 0x9C, 0xF0, 0x7D,
                /* 1D68 */  0xA9, 0x43, 0x03, 0x01, 0xD1, 0x21, 0x81, 0x74,
                /* 1D70 */  0x39, 0x24, 0x50, 0x10, 0x1D, 0xD0, 0x08, 0x10,
                /* 1D78 */  0x55, 0xF2, 0xA4, 0x17, 0x90, 0x73, 0x80, 0xE8,
                /* 1D80 */  0xC8, 0x41, 0x80, 0xA8, 0xA2, 0x32, 0xFF, 0xFF,
                /* 1D88 */  0x83, 0x01, 0x05, 0xD1, 0xE1, 0x81, 0xA4, 0x39,
                /* 1D90 */  0x4C, 0x50, 0x10, 0x1D, 0x45, 0x48, 0x1C, 0x20,
                /* 1D98 */  0x26, 0x1B, 0x44, 0x47, 0x11, 0x02, 0x44, 0xE3,
                /* 1DA0 */  0x03, 0xD1, 0xD8, 0x79, 0x0E, 0x03, 0xB4, 0x0F,
                /* 1DA8 */  0x10, 0xCB, 0x02, 0x22, 0x20, 0x07, 0x03, 0xA2,
                /* 1DB0 */  0x6A, 0x5E, 0x92, 0x3A, 0x5E, 0x11, 0x10, 0x1D,
                /* 1DB8 */  0x2E, 0x48, 0xA1, 0xC3, 0x05, 0x05, 0x11, 0x90,
                /* 1DC0 */  0xA5, 0x35, 0x3A, 0x9E, 0x51, 0x10, 0x01, 0x39,
                /* 1DC8 */  0x2A, 0x10, 0x0D, 0x0E, 0x44, 0x25, 0x64, 0x02,
                /* 1DD0 */  0x62, 0x7A, 0x40, 0x74, 0x78, 0x20, 0x40, 0x34,
                /* 1DD8 */  0x24, 0x10, 0x55, 0xD8, 0xE9, 0xC0, 0x40, 0x41,
                /* 1DE0 */  0x74, 0x38, 0x20, 0xA1, 0x0E, 0x07, 0x14, 0x44,
                /* 1DE8 */  0x40, 0x8E, 0xDB, 0xEA, 0x58, 0x40, 0x63, 0x1D,
                /* 1DF0 */  0x89, 0x68, 0xAD, 0x23, 0x11, 0x05, 0xD1, 0x71,
                /* 1DF8 */  0x85, 0xE4, 0x3A, 0xAE, 0x50, 0x10, 0x01, 0x59,
                /* 1E00 */  0x64, 0xAF, 0x23, 0x15, 0x05, 0xD1, 0xB1, 0x8C,
                /* 1E08 */  0x14, 0x3B, 0xAA, 0x50, 0x10, 0x01, 0x39, 0x44,
                /* 1E10 */  0xB2, 0xA3, 0x12, 0x05, 0x11, 0x90, 0xB3, 0x45,
                /* 1E18 */  0x03, 0x62, 0x41, 0x41, 0x74, 0x48, 0x20, 0xD5,
                /* 1E20 */  0x0E, 0x09, 0x14, 0x44, 0x47, 0x27, 0x52, 0xEE,
                /* 1E28 */  0x80, 0x45, 0x41, 0xA8, 0xD2, 0x76, 0x87, 0x00,
                /* 1E30 */  0x0A, 0xA2, 0x23, 0x0B, 0x89, 0x77, 0xC4, 0xA1,
                /* 1E38 */  0x20, 0x02, 0xF2, 0xFF, 0x1F                   
            })
            Method (WMAA, 3, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (0x4141, CTID)
                WSMI (Arg1, Arg2)
                While (One)
                {
                    Store (ToInteger (Arg1), _T_0)
                    If (LEqual (_T_0, One))
                    {
                        Store (WMIB, AAST)
                        Return (AAST)
                    }
                    ElseIf (LEqual (_T_0, 0x02))
                    {
                        Store (WMIB, AAGT)
                        Return (AAGT)
                    }

                    Break
                }

                Return (0xE1)
            }

            Method (WMAB, 3, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (0x4241, CTID)
                WSMI (Arg1, Arg2)
                While (One)
                {
                    Store (ToInteger (Arg1), _T_0)
                    If (LEqual (_T_0, One))
                    {
                        Store (WMIB, ABST)
                        Return (ABST)
                    }
                    ElseIf (LEqual (_T_0, 0x02))
                    {
                        Store (WMIB, ABGT)
                        Return (ABGT)
                    }

                    Break
                }

                Return (0xE1)
            }

            Method (WMBE, 3, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (0x4542, CTID)
                WSMI (Arg1, Arg2)
                While (One)
                {
                    Store (ToInteger (Arg1), _T_0)
                    If (LEqual (_T_0, 0x13))
                    {
                        Store (WMIB, BEBI)
                        Return (BEBI)
                    }

                    Break
                }

                Store (One, Index (BEBI, 0x02))
                Return (BEBI)
            }

            Method (WMBK, 3, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (0x4B42, CTID)
                WSMI (Arg1, Arg2)
                While (One)
                {
                    Store (ToInteger (Arg1), _T_0)
                    If (LEqual (_T_0, One))
                    {
                        Store (WMIB, BKCP)
                        Return (BKCP)
                    }
                    ElseIf (LEqual (_T_0, 0x02))
                    {
                        Store (WMIB, BKCP)
                        Return (BKCP)
                    }
                    ElseIf (LEqual (_T_0, 0x03))
                    {
                        Store (WMIB, BKCP)
                        Return (BKCP)
                    }
                    ElseIf (LEqual (_T_0, 0x08))
                    {
                        Store (WMIB, BKMN)
                        Return (BKMN)
                    }
                    ElseIf (LEqual (_T_0, 0x09))
                    {
                        Store (WMIB, BKSN)
                        Return (BKSN)
                    }
                    ElseIf (LEqual (_T_0, 0x0A))
                    {
                        Store (WMIB, BKAT)
                        Return (BKAT)
                    }
                    ElseIf (LEqual (_T_0, 0x0B))
                    {
                        Store (WMIB, BKSB)
                        Return (BKSB)
                    }
                    ElseIf (LEqual (_T_0, 0x0D))
                    {
                        Store (WMIB, BKSB)
                        Return (BKSB)
                    }
                    ElseIf (LEqual (_T_0, 0x10))
                    {
                        Store (WMIB, BKGB)
                        Return (BKGB)
                    }
                    ElseIf (LEqual (_T_0, 0x11))
                    {
                        Store (WMIB, BKSB)
                        Return (BKSB)
                    }
                    ElseIf (LEqual (_T_0, 0x12))
                    {
                        Store (WMIB, BKCP)
                        Return (BKCP)
                    }
                    ElseIf (LEqual (_T_0, 0x13))
                    {
                        Store (WMIB, BKCP)
                        Return (BKCP)
                    }
                    ElseIf (LEqual (_T_0, 0x14))
                    {
                        Store (WMIB, BKGU)
                        Return (BKGU)
                    }
                    ElseIf (LEqual (_T_0, 0x15))
                    {
                        Store (WMIB, BKSU)
                        Return (BKSU)
                    }
                    ElseIf (LEqual (_T_0, 0x16))
                    {
                        Store (WMIB, BKGS)
                        Return (BKGS)
                    }
                    ElseIf (LEqual (_T_0, 0x17))
                    {
                        Store (WMIB, BKSS)
                        Return (BKSS)
                    }

                    Break
                }

                Return (One)
            }

            Method (WMBL, 3, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (0x4C42, CTID)
                WSMI (Arg1, Arg2)
                While (One)
                {
                    Store (ToInteger (Arg1), _T_0)
                    If (LEqual (_T_0, One))
                    {
                        Store (WMIB, BLCP)
                        Return (BLCP)
                    }
                    ElseIf (LEqual (_T_0, 0x02))
                    {
                        Store (WMIB, BLSP)
                        Return (BLSP)
                    }
                    ElseIf (LEqual (_T_0, 0x03))
                    {
                        Store (WMIB, BLGB)
                        Return (BLGB)
                    }
                    ElseIf (LEqual (_T_0, 0x04))
                    {
                        Store (WMIB, BLSP)
                        Return (BLSP)
                    }
                    ElseIf (LEqual (_T_0, 0x05))
                    {
                        Store (WMIB, BLSP)
                        Return (BLSP)
                    }
                    ElseIf (LEqual (_T_0, 0x06))
                    {
                        Store (WMIB, BLLB)
                        Return (BLLB)
                    }
                    ElseIf (LEqual (_T_0, 0x07))
                    {
                        Store (WMIB, BLSD)
                        Return (BLSD)
                    }
                    ElseIf (LEqual (_T_0, 0x08))
                    {
                        Store (WMIB, BLGD)
                        Return (BLGD)
                    }
                    ElseIf (LEqual (_T_0, 0x09))
                    {
                        Store (WMIB, BLDR)
                        Return (BLDR)
                    }
                    ElseIf (LEqual (_T_0, 0x0A))
                    {
                        Store (WMIB, BLGP)
                        Return (BLGP)
                    }

                    Break
                }

                Return (One)
            }

            Method (WMBG, 3, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (0x4742, CTID)
                WSMI (Arg1, Arg2)
                While (One)
                {
                    Store (ToInteger (Arg1), _T_0)
                    If (LEqual (_T_0, One))
                    {
                        Store (WMIB, BGS3)
                        Return (BGS3)
                    }

                    Break
                }

                Return (0xFFFF)
            }

            Method (EVBC, 0, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (DerefOf (Index (FEBC, Zero)), Local0)
                While (One)
                {
                    Store (Local0, _T_0)
                    If (LEqual (_T_0, One))
                    {
                        CLBC (0x04, 0x04)
                        Store (DerefOf (Index (FEBC, One)), Local1)
                        Store (Zero, Local2)
                        If (LAnd (LGreater (Local1, Zero), LLess (Local1, 0x20)))
                        {
                            Store (\_SB.PCI0.LPCB.EC0.GCMS (RefOf (Local2)), Local3)
                            If (LNotEqual (Local3, Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                Store (And (Local2, 0xFF), Index (FEBC, 0x02))
                                ShiftRight (Local2, 0x08, Local2)
                                Store (And (Local2, 0xFF), Index (FEBC, 0x03))
                            }
                        }
                        ElseIf (LAnd (LGreater (Local1, 0x80), LLess (Local1, 0xA0)))
                        {
                            Store (\_SB.PCI0.LPCB.EC0.GOTS (Local1, RefOf (Local2)), Local3)
                            If (LNotEqual (Local3, Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                Store (And (Local2, 0xFF), Index (FEBC, 0x02))
                                ShiftRight (Local2, 0x08, Local2)
                                Store (And (Local2, 0xFF), Index (FEBC, 0x03))
                            }
                        }
                        Else
                        {
                            Store (Zero, Index (FEBC, 0x02))
                            Store (Zero, Index (FEBC, 0x03))
                        }
                    }
                    ElseIf (LEqual (_T_0, 0x02))
                    {
                        CLBC (0x02, 0x06)
                    }
                    ElseIf (LEqual (_T_0, 0x03))
                    {
                        CLBC (0x02, 0x06)
                    }
                    ElseIf (LEqual (_T_0, 0x04))
                    {
                        CLBC (0x03, 0x05)
                        Store (Zero, Local1)
                        Store (\_SB.PCI0.LPCB.EC0.GBL1 (RefOf (Local1)), Local2)
                        If (LNotEqual (Local2, Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            Store (And (Local1, 0xFF), Index (FEBC, One))
                            Store (\_SB.PCI0.LPCB.EC0.GBL2 (RefOf (Local1)), Local2)
                            If (LNotEqual (Local2, Zero))
                            {
                                Store (Zero, Index (FEBC, 0x02))
                            }
                            Else
                            {
                                Store (And (Local1, 0xFF), Index (FEBC, 0x02))
                            }
                        }
                    }
                    ElseIf (LEqual (_T_0, 0x05))
                    {
                        Store (Zero, Local1)
                        Store (\_SB.PCI0.LPCB.EC0.GSTY (RefOf (Local1)), Local3)
                        If (LNotEqual (Local3, Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            Store (And (Local1, 0xFF), Index (FEBC, One))
                            Store (Zero, Local4)
                            Store (\_SB.PCI0.LPCB.EC0.GSDA (RefOf (Local4)), Local5)
                            If (LNotEqual (Local5, Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                Store (And (Local4, 0xFF), Index (FEBC, 0x02))
                                ShiftRight (Local4, 0x08, Local4)
                                Store (And (Local4, 0xFF), Index (FEBC, 0x03))
                                ShiftRight (Local4, 0x08, Local4)
                                Store (And (Local4, 0xFF), Index (FEBC, 0x04))
                                ShiftRight (Local4, 0x08, Local4)
                                Store (And (Local4, 0xFF), Index (FEBC, 0x05))
                            }
                        }

                        If (LEqual (\_SB.PCI0.LPCB.EC0.ROMD, 0x02))
                        {
                            Store (0x10, Index (FEBC, 0x06))
                        }
                        ElseIf (LEqual (\_SB.PCI0.LPCB.EC0.ROMD, 0x03))
                        {
                            Store (0x08, Index (FEBC, 0x06))
                        }
                        ElseIf (LEqual (\_SB.PCI0.LPCB.EC0.ROMD, 0x04))
                        {
                            Store (0x02, Index (FEBC, 0x06))
                        }
                        ElseIf (LEqual (\_SB.PCI0.LPCB.EC0.ROMD, 0x05))
                        {
                            Store (One, Index (FEBC, 0x06))
                        }
                        ElseIf (LEqual (\_SB.PCI0.LPCB.EC0.ROMD, 0x06))
                        {
                            Store (0x40, Index (FEBC, 0x06))
                        }
                        Else
                        {
                            Store (One, Index (FEBC, 0x06))
                        }
                    }
                    ElseIf (LEqual (_T_0, 0x06))
                    {
                        CLBC (0x03, 0x05)
                        Store (Zero, Local1)
                        Store (\_SB.PCI0.LPCB.EC0.GTTY (RefOf (Local1)), Local3)
                        If (LNotEqual (Local3, Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            Store (And (Local1, 0xFF), Index (FEBC, One))
                            Store (Zero, Local4)
                            Store (\_SB.PCI0.LPCB.EC0.GTDA (RefOf (Local4)), Local5)
                            If (LNotEqual (Local5, Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                Store (And (Local4, 0xFF), Index (FEBC, 0x02))
                            }
                        }
                    }
                    Else
                    {
                        CLBC (Zero, 0x08)
                    }

                    Break
                }

                Return (FEBC)
            }

            Method (EVBD, 0, Serialized)
            {
                Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
                Store (DerefOf (Index (FEBC, Zero)), Local0)
                While (One)
                {
                    Store (Local0, _T_0)
                    If (LEqual (_T_0, One))
                    {
                        CLBC (0x02, 0x06)
                    }
                    Else
                    {
                        CLBC (Zero, 0x08)
                        Store (0xE1, Index (FEBC, One))
                    }

                    Break
                }

                Return (FEBC)
            }

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event
            {
                If (LEqual (Arg0, 0xBC))
                {
                    Return (EVBC ())
                }
                ElseIf (LEqual (Arg0, 0xBD))
                {
                    Return (EVBD ())
                }
                Else
                {
                    CLBC (Zero, 0x08)
                    Return (FEBC)
                }
            }
        }
    }
}

